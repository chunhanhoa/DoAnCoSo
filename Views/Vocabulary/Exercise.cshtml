@model List<VocabularyModel>
@{
    ViewData["Title"] = "Exercise - " + ViewBag.Topic?.Name_CD ?? "Luyện tập từ vựng";
    var topic = ViewBag.Topic as TopicModel;
}

<!-- Header Section -->
<div class="container mt-5">
    <div class="row mb-4">
        <div class="col-md-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Vocabulary")">Từ vựng</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Topic", "Vocabulary", new { id = topic?.ID_CD })">@(topic?.Name_CD ?? "Chủ đề")</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Luyện tập</li>
                </ol>
            </nav>
        </div>
    </div>

    <!-- Title and Instructions -->
    <div class="row mb-5">
        <div class="col-md-8">
            <h1 class="display-5 fw-bold mb-3">Luyện tập: @(topic?.Name_CD ?? "Từ vựng")</h1>
            <p class="lead">Chọn loại bài tập từ vựng bạn muốn luyện tập</p>
        </div>
    </div>

    <!-- Exercise Type Selection -->
    <div class="row mb-4">
        <div class="col-md-12">
            <ul class="nav nav-pills nav-fill mb-4" id="exerciseTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="listening-tab" data-bs-toggle="pill" data-bs-target="#listening-exercise" 
                            type="button" role="tab" aria-controls="listening-exercise" aria-selected="true">
                        <i class="fas fa-headphones me-2"></i>Luyện tập nghe
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="word-ordering-tab" data-bs-toggle="pill" data-bs-target="#word-ordering-exercise" 
                            type="button" role="tab" aria-controls="word-ordering-exercise" aria-selected="false">
                        <i class="fas fa-sort-alpha-down me-2"></i>Sắp xếp câu
                    </button>
                </li>
            </ul>
        </div>
    </div>

    <!-- Exercise Content -->
    <div class="row mb-5">
        <div class="col-md-12">
            <div class="tab-content" id="exerciseTabContent">
                <!-- Listening Exercise Tab -->
                <div class="tab-pane fade show active" id="listening-exercise" role="tabpanel" aria-labelledby="listening-tab">
                    <div class="card border-0 shadow-sm">
                        <div class="card-body p-4">
                            <h3 class="mb-4"><i class="fas fa-headphones me-2 text-primary"></i>Luyện tập nghe</h3>
                            <p class="text-muted mb-4">Nhấn vào nút phát âm để nghe từ vựng, sau đó gõ từ bạn nghe được vào ô và kiểm tra.</p>
                            
                            <div id="listening-questions" class="listening-container">
                                <!-- Các câu hỏi nghe sẽ được thêm vào đây qua JavaScript -->
                                <div class="text-center py-4">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Đang tải...</span>
                                    </div>
                                    <p class="mt-2">Đang tải bài tập...</p>
                                </div>
                            </div>

                            <div id="result-listening" class="result-container mt-4" style="display: none;">
                                <div class="result-content"></div>
                                <button type="button" class="btn btn-primary mt-3" id="retry-listening">Làm lại</button>
                                <button type="button" class="btn btn-success mt-3" id="share-result-listening">Chia sẻ kết quả</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Word Ordering Exercise Tab -->
                <div class="tab-pane fade" id="word-ordering-exercise" role="tabpanel" aria-labelledby="word-ordering-tab">
                    <div class="card border-0 shadow-sm">
                        <div class="card-body p-4">
                            <h3 class="mb-4"><i class="fas fa-sort-alpha-down me-2 text-primary"></i>Sắp xếp câu</h3>
                            <p class="text-muted mb-4">Sắp xếp các từ để tạo thành câu hoàn chỉnh. Luyện tập cấu trúc ngữ pháp và từ vựng.</p>
                            
                            <div id="word-ordering-questions" class="word-ordering-container">
                                <!-- Các câu hỏi sắp xếp câu sẽ được thêm vào đây qua JavaScript -->
                                <div class="text-center py-4">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Đang tải...</span>
                                    </div>
                                    <p class="mt-2">Đang tải bài tập...</p>
                                </div>
                            </div>

                            <div id="result-word-ordering" class="result-container mt-4" style="display: none;">
                                <div class="result-content"></div>
                                <button type="button" class="btn btn-primary mt-3" id="retry-word-ordering">Làm lại</button>
                                <button type="button" class="btn btn-success mt-3" id="share-result-word-ordering">Chia sẻ kết quả</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Dữ liệu từ vựng từ Model
            const vocabularies = @Html.Raw(Json.Serialize(Model));
            
            // Khởi tạo các biến
            let listeningCreated = false;
            let wordOrderingCreated = false;
            
            // Theo dõi sự kiện thay đổi tab để tạo bài tập tương ứng
            $('#exerciseTab button').on('shown.bs.tab', function (e) {
                const targetId = $(e.target).attr("id");
                
                // Tạo bài tập tương ứng với tab được chọn
                if (targetId === 'listening-tab') {
                    createListeningExercise(vocabularies);
                } else if (targetId === 'word-ordering-tab') {
                    createWordOrderingExercise(vocabularies);
                }
            });
            
            // Mặc định tạo bài tập nghe khi trang được tải
            setTimeout(() => {
                createListeningExercise(vocabularies);
                
                // Thêm sự kiện cho nút làm lại
                document.getElementById('retry-listening')?.addEventListener('click', function() {
                    listeningCreated = false; // Reset để có thể tạo lại
                    createListeningExercise(vocabularies);
                    document.getElementById('result-listening').style.display = 'none';
                });
                
                document.getElementById('retry-word-ordering')?.addEventListener('click', function() {
                    wordOrderingCreated = false; // Reset để có thể tạo lại
                    createWordOrderingExercise(vocabularies);
                    document.getElementById('result-word-ordering').style.display = 'none';
                });
            }, 300);
            
            // Tạo bài tập nghe
            function createListeningExercise(vocabularyList) {
                if (listeningCreated) return; // Tránh tạo lại
                
                try {
                    const container = document.getElementById('listening-questions');
                    container.innerHTML = '';
                    
                    if (!vocabularyList || vocabularyList.length === 0) {
                        container.innerHTML = '<div class="alert alert-warning">Không có từ vựng nào để tạo bài tập. Vui lòng thử lại sau.</div>';
                        return;
                    }
                    
                    // Shuffle từ vựng để tạo câu hỏi ngẫu nhiên
                    const shuffledVocab = [...vocabularyList].sort(() => 0.5 - Math.random()).slice(0, 8);
                    
                    // Tạo các câu hỏi nghe
                    shuffledVocab.forEach((vocab, index) => {
                        const listItem = document.createElement('div');
                        listItem.className = 'listening-item card mb-3';
                        
                        const cardBody = document.createElement('div');
                        cardBody.className = 'card-body';
                        
                        // Tạo phần nghe
                        const audioSection = document.createElement('div');
                        audioSection.className = 'd-flex align-items-center mb-3';
                        audioSection.innerHTML = `
                            <button class="btn btn-primary me-3 play-audio" data-word="${vocab.word_TV}">
                                <i class="fas fa-volume-up"></i> Nghe
                            </button>
                            <h5 class="mb-0">Câu ${index + 1}</h5>
                        `;
                        
                        // Tạo ô nhập đáp án
                        const inputGroup = document.createElement('div');
                        inputGroup.className = 'input-group mb-3';
                        inputGroup.innerHTML = `
                            <input type="text" class="form-control listening-input" placeholder="Nhập từ bạn nghe được" data-correct="${vocab.word_TV}">
                            <button class="btn btn-outline-secondary check-answer" type="button">Kiểm tra</button>
                        `;
                        
                        // Tạo phần phản hồi
                        const feedback = document.createElement('div');
                        feedback.className = 'feedback mt-2 d-none';
                        feedback.innerHTML = `
                            <div class="correct-feedback text-success d-none">
                                <i class="fas fa-check-circle me-1"></i> Chính xác! Từ này có nghĩa: ${vocab.meaning_TV}
                            </div>
                            <div class="incorrect-feedback text-danger d-none">
                                <i class="fas fa-times-circle me-1"></i> Không chính xác. Đáp án đúng là: ${vocab.word_TV}
                            </div>
                        `;
                        
                        // Thêm các phần tử vào card
                        cardBody.appendChild(audioSection);
                        cardBody.appendChild(inputGroup);
                        cardBody.appendChild(feedback);
                        listItem.appendChild(cardBody);
                        container.appendChild(listItem);
                        
                        // Thêm sự kiện cho nút phát âm thanh
                        const playButton = cardBody.querySelector('.play-audio');
                        playButton.addEventListener('click', function() {
                            const word = this.dataset.word;
                            speakWord(word);
                        });
                        
                        // Thêm sự kiện cho nút kiểm tra
                        const checkButton = cardBody.querySelector('.check-answer');
                        checkButton.addEventListener('click', function() {
                            const input = this.parentElement.querySelector('.listening-input');
                            const userAnswer = input.value.trim().toLowerCase();
                            const correctAnswer = input.dataset.correct.toLowerCase();
                            
                            const feedbackElem = this.parentElement.nextElementSibling;
                            const correctFeedback = feedbackElem.querySelector('.correct-feedback');
                            const incorrectFeedback = feedbackElem.querySelector('.incorrect-feedback');
                            
                            feedbackElem.classList.remove('d-none');
                            
                            if (userAnswer === correctAnswer) {
                                correctFeedback.classList.remove('d-none');
                                incorrectFeedback.classList.add('d-none');
                                input.classList.add('is-valid');
                                input.classList.remove('is-invalid');
                            } else {
                                correctFeedback.classList.add('d-none');
                                incorrectFeedback.classList.remove('d-none');
                                input.classList.add('is-invalid');
                                input.classList.remove('is-valid');
                            }
                        });
                    });
                    
                    listeningCreated = true;
                } catch (error) {
                    console.error('Error creating listening exercise:', error);
                    document.getElementById('listening-questions').innerHTML = 
                        '<div class="alert alert-danger">Đã xảy ra lỗi khi tạo bài tập nghe. Vui lòng tải lại trang.</div>';
                }
            }

            // Tạo bài tập sắp xếp câu
            function createWordOrderingExercise(vocabularyList) {
                if (wordOrderingCreated) return; // Tránh tạo lại
                
                try {
                    const container = document.getElementById('word-ordering-questions');
                    container.innerHTML = '';
                    
                    // Lấy thông tin chủ đề
                    const topicId = @(topic?.ID_CD ?? 0);
                    const topicName = '@(topic?.Name_CD ?? "")';
                    
                    // Fake data - các câu mẫu liên quan đến chủ đề
                    const fakeSentences = getTopicRelatedSentences(topicId, topicName);
                    
                    // Lọc từ vựng có câu ví dụ hợp lệ
                    let validExamples = [];
                    if (vocabularyList && vocabularyList.length > 0) {
                        validExamples = vocabularyList.filter(v => v.Example_TV && v.Example_TV.split(' ').length > 3)
                                                     .sort(() => 0.5 - Math.random()).slice(0, 5);
                    }
                    
                    // Nếu không có đủ câu ví dụ từ dữ liệu thực, sử dụng fake data
                    if (validExamples.length < 5) {
                        console.log("Không có đủ câu ví dụ, sử dụng fake data cho chủ đề: " + topicName);
                        const remainingNeeded = 5 - validExamples.length;
                        
                        // Thêm fake sentences để đủ 5 câu
                        for (let i = 0; i < remainingNeeded; i++) {
                            validExamples.push({
                                Example_TV: fakeSentences[i],
                                word_TV: "Sample" + (i + 1),
                                meaning_TV: "Ví dụ " + (i + 1)
                            });
                        }
                    }
                    
                    // Tạo các câu hỏi sắp xếp câu
                    validExamples.forEach((vocab, index) => {
                        const listItem = document.createElement('div');
                        listItem.className = 'word-ordering-item card mb-3';
                        listItem.id = `word-item-${index}`;
                        
                        const cardBody = document.createElement('div');
                        cardBody.className = 'card-body';
                        
                        // Tạo phần câu hỏi
                        const questionSection = document.createElement('div');
                        questionSection.className = 'mb-3';
                        questionSection.innerHTML = `
                            <h5 class="mb-2">Câu ${index + 1}</h5>
                            <p class="text-muted mb-3">Sắp xếp các từ sau để tạo thành câu hoàn chỉnh:</p>
                        `;
                        
                        // Tạo word bank
                        const wordBank = document.createElement('div');
                        wordBank.className = 'word-bank d-flex flex-wrap gap-2 mb-3';
                        wordBank.id = `word-bank-${index}`;
                        
                        // Xử lý câu ví dụ, loại bỏ dấu câu nếu cần
                        const exampleSentence = vocab.Example_TV.replace(/[.,!?;:]/g, "");
                        const words = exampleSentence.split(' ').sort(() => 0.5 - Math.random());
                        
                        words.forEach(word => {
                            const wordItem = document.createElement('span');
                            wordItem.className = 'word-item badge bg-secondary text-white px-3 py-2 m-1';
                            wordItem.textContent = word;
                            wordItem.setAttribute('data-word', word);
                            wordItem.style.cursor = 'pointer';
                            wordBank.appendChild(wordItem);
                        });
                        
                        // Tạo answer area
                        const answerArea = document.createElement('div');
                        answerArea.className = 'answer-area border rounded p-3 min-height-60';
                        answerArea.id = `answer-area-${index}`;
                        answerArea.setAttribute('data-correct', exampleSentence);
                        answerArea.innerHTML = '<p class="text-muted empty-message">Nhấp vào các từ bên trên để đặt chúng vào đây</p>';
                        
                        // Tạo phần feedback
                        const feedback = document.createElement('div');
                        feedback.className = 'feedback mt-3';
                        feedback.style.display = 'none';
                        feedback.innerHTML = `
                            <div class="correct-feedback alert alert-success">
                                <i class="fas fa-check-circle me-1"></i> Chính xác! Câu đã được sắp xếp đúng.
                            </div>
                            <div class="incorrect-feedback alert alert-danger">
                                <i class="fas fa-times-circle me-1"></i> Chưa đúng. Câu đúng là: 
                                <strong class="correct-answer">${exampleSentence}</strong>
                            </div>
                        `;
                        
                        // Hiển thị thêm thông tin về từ vựng nếu có
                        if (vocab.word_TV && vocab.word_TV !== 'Sample' + (index + 1)) {
                            const vocabInfo = document.createElement('div');
                            vocabInfo.className = 'vocab-info mt-3 p-2 bg-light rounded';
                            vocabInfo.innerHTML = `
                                <p class="mb-0"><strong>Từ vựng liên quan:</strong> ${vocab.word_TV} - ${vocab.meaning_TV || ''}</p>
                            `;
                            feedback.appendChild(vocabInfo);
                        }
                        
                        // Tạo nút kiểm tra và reset
                        const buttonsDiv = document.createElement('div');
                        buttonsDiv.className = 'd-flex gap-2 mt-3';
                        buttonsDiv.innerHTML = `
                            <button type="button" class="btn btn-primary check-sentence-btn" data-index="${index}">
                                <i class="fas fa-check me-1"></i> Kiểm tra
                            </button>
                            <button type="button" class="btn btn-outline-secondary reset-sentence-btn" data-index="${index}">
                                <i class="fas fa-redo me-1"></i> Làm lại
                            </button>
                        `;
                        
                        // Thêm các phần tử vào card
                        cardBody.appendChild(questionSection);
                        cardBody.appendChild(wordBank);
                        cardBody.appendChild(answerArea);
                        cardBody.appendChild(feedback);
                        cardBody.appendChild(buttonsDiv);
                        listItem.appendChild(cardBody);
                        container.appendChild(listItem);
                        
                        // Thêm sự kiện cho các từ trong word bank
                        setupWordItemsEvents(wordBank, answerArea, index);
                        
                        // Thêm sự kiện cho nút kiểm tra và reset
                        const checkButton = cardBody.querySelector('.check-sentence-btn');
                        checkButton.addEventListener('click', function() {
                            checkSentence(index);
                        });
                        
                        const resetButton = cardBody.querySelector('.reset-sentence-btn');
                        resetButton.addEventListener('click', function() {
                            resetSentence(index);
                        });
                    });
                    
                    // Thêm nút kiểm tra tất cả
                    const checkAllButton = document.createElement('button');
                    checkAllButton.className = 'btn btn-primary btn-lg mt-4 mx-auto d-block';
                    checkAllButton.innerHTML = '<i class="fas fa-check-circle me-2"></i> Kiểm tra tất cả';
                    checkAllButton.addEventListener('click', checkAllSentences);
                    container.appendChild(checkAllButton);
                    
                    wordOrderingCreated = true;
                } catch (error) {
                    console.error('Error creating word ordering exercise:', error);
                    document.getElementById('word-ordering-questions').innerHTML = 
                        '<div class="alert alert-danger">Đã xảy ra lỗi khi tạo bài tập sắp xếp câu. Vui lòng tải lại trang.</div>';
                }
            }
            
            // Hàm tạo câu ví dụ dựa trên chủ đề
            function getTopicRelatedSentences(topicId, topicName) {
                // Mặc định các câu ví dụ chung
                let sentences = [
                    "This is an example sentence",
                    "English is an interesting language",
                    "Learning vocabulary is important",
                    "Practice makes perfect",
                    "Reading helps improve vocabulary"
                ];
                
                // Dựa vào ID hoặc tên chủ đề để chọn câu ví dụ phù hợp
                switch(topicId) {
                    case 1: // Animals - Động vật
                        return [
                            "Cats are popular pets in many homes",
                            "Lions are wild animals in Africa",
                            "Dogs are loyal to their owners",
                            "Elephants have long trunks and big ears",
                            "Birds can fly in the sky"
                        ];
                    case 2: // Food and Drinks - Thức ăn và đồ uống
                        return [
                            "I like to eat pizza for dinner",
                            "Coffee is a popular morning drink",
                            "Vietnamese food is very delicious",
                            "Fresh fruits are good for health",
                            "She drinks water every morning"
                        ];
                    case 3: // School - Trường học
                        return [
                            "Students study at the school",
                            "The teacher explains the lesson",
                            "We have many books in our library",
                            "Mathematics is an important subject",
                            "Children play in the schoolyard"
                        ];
                    case 4: // Family - Gia đình
                        return [
                            "My father works in an office",
                            "Her mother is a doctor",
                            "We have dinner with family",
                            "Grandparents tell interesting stories",
                            "My brother plays football every weekend"
                        ];
                    case 5: // Sports - Thể thao
                        return [
                            "Football is popular worldwide",
                            "Swimming is good exercise",
                            "They play basketball every afternoon",
                            "Tennis requires good coordination",
                            "Running helps maintain good health"
                        ];
                    case 6: // Jobs - Nghề nghiệp
                        return [
                            "Doctors work in hospitals",
                            "Teachers educate students at schools",
                            "Farmers grow crops in fields",
                            "Engineers design new technology",
                            "Police officers ensure public safety"
                        ];
                    default:
                        // Nếu không nhận dạng được chủ đề qua ID, thử dùng tên
                        if (topicName.includes("animal") || topicName.toLowerCase().includes("động vật"))
                            return getTopicRelatedSentences(1);
                        if (topicName.includes("food") || topicName.toLowerCase().includes("thức ăn"))
                            return getTopicRelatedSentences(2);
                        if (topicName.includes("school") || topicName.toLowerCase().includes("trường học"))
                            return getTopicRelatedSentences(3);
                        if (topicName.includes("family") || topicName.toLowerCase().includes("gia đình"))
                            return getTopicRelatedSentences(4);
                        if (topicName.includes("sport") || topicName.toLowerCase().includes("thể thao"))
                            return getTopicRelatedSentences(5);
                        if (topicName.includes("job") || topicName.toLowerCase().includes("nghề nghiệp"))
                            return getTopicRelatedSentences(6);
                            
                        return sentences;
                }
            }
            
            // Hàm thiết lập sự kiện cho các từ
            function setupWordItemsEvents(wordBank, answerArea, index) {
                const wordItems = wordBank.querySelectorAll('.word-item');
                
                wordItems.forEach(wordItem => {
                    wordItem.addEventListener('click', function() {
                        // Di chuyển từ từ word bank sang answer area
                        const clone = this.cloneNode(true);
                        this.style.display = 'none';
                        
                        // Thêm sự kiện cho từ được clone để có thể di chuyển trở lại word bank
                        clone.addEventListener('click', function() {
                            // Tìm từ gốc trong word bank và hiển thị lại
                            const word = this.getAttribute('data-word');
                            const originalWord = wordBank.querySelector(`.word-item[data-word="${word}"]`);
                            if (originalWord) {
                                originalWord.style.display = 'inline-block';
                            }
                            
                            // Xóa từ được clone
                            this.remove();
                            
                            // Hiển thị/ẩn thông báo trống
                            updateEmptyMessage(answerArea);
                        });
                        
                        // Thêm từ được clone vào answer area
                        answerArea.appendChild(clone);
                        
                        // Ẩn thông báo trống
                        updateEmptyMessage(answerArea);
                    });
                });
            }
            
            // Hàm cập nhật thông báo trống
            function updateEmptyMessage(answerArea) {
                const emptyMessage = answerArea.querySelector('.empty-message');
                if (emptyMessage) {
                    const wordItems = answerArea.querySelectorAll('.word-item');
                    emptyMessage.style.display = wordItems.length === 0 ? 'block' : 'none';
                }
            }
            
            // Hàm kiểm tra câu
            function checkSentence(index) {
                const answerArea = document.getElementById(`answer-area-${index}`);
                const wordItems = answerArea.querySelectorAll('.word-item');
                const feedbackContainer = document.querySelector(`#word-item-${index} .feedback`);
                const correctFeedback = feedbackContainer.querySelector('.correct-feedback');
                const incorrectFeedback = feedbackContainer.querySelector('.incorrect-feedback');
                
                // Kiểm tra xem đã đặt đủ từ chưa
                if (wordItems.length === 0) {
                    alert('Vui lòng đặt các từ vào ô trước khi kiểm tra.');
                    return;
                }
                
                // Lấy câu người dùng đã sắp xếp
                const userSentence = Array.from(wordItems).map(item => item.getAttribute('data-word')).join(' ');
                
                // Lấy câu đúng
                const correctSentence = answerArea.getAttribute('data-correct');
                
                // Hiển thị feedback
                feedbackContainer.style.display = 'block';
                
                // Kiểm tra câu trả lời
                if (userSentence.toLowerCase() === correctSentence.toLowerCase()) {
                    correctFeedback.style.display = 'block';
                    incorrectFeedback.style.display = 'none';
                    answerArea.classList.add('border-success');
                } else {
                    correctFeedback.style.display = 'none';
                    incorrectFeedback.style.display = 'block';
                    answerArea.classList.add('border-danger');
                }
                
                // Vô hiệu hóa các từ để ngăn thay đổi sau khi kiểm tra
                wordItems.forEach(item => {
                    item.style.pointerEvents = 'none';
                });
            }
            
            // Hàm kiểm tra tất cả các câu
            function checkAllSentences() {
                const wordItems = document.querySelectorAll('.word-ordering-item');
                let correctCount = 0;
                
                wordItems.forEach((item, index) => {
                    const answerArea = document.getElementById(`answer-area-${index}`);
                    const words = answerArea.querySelectorAll('.word-item');
                    const userSentence = Array.from(words).map(w => w.getAttribute('data-word')).join(' ');
                    const correctSentence = answerArea.getAttribute('data-correct');
                    
                    if (userSentence.toLowerCase() === correctSentence.toLowerCase()) {
                        correctCount++;
                    }
                    
                    // Kiểm tra từng câu
                    checkSentence(index);
                });
                
                // Hiển thị kết quả tổng quát
                const totalCount = wordItems.length;
                const percentage = Math.round((correctCount / totalCount) * 100);
                
                alert(`Bạn đã hoàn thành: ${correctCount}/${totalCount} câu đúng (${percentage}%)`);
            }
            
            // Hàm reset câu
            function resetSentence(index) {
                const wordBank = document.getElementById(`word-bank-${index}`);
                const answerArea = document.getElementById(`answer-area-${index}`);
                const feedbackContainer = document.querySelector(`#word-item-${index} .feedback`);
                
                // Hiển thị lại tất cả các từ trong word bank
                wordBank.querySelectorAll('.word-item').forEach(item => {
                    item.style.display = 'inline-block';
                });
                
                // Xóa tất cả các từ trong answer area
                const clonedWordItems = answerArea.querySelectorAll('.word-item');
                clonedWordItems.forEach(item => item.remove());
                
                // Hiển thị lại thông báo trống
                const emptyMessage = answerArea.querySelector('.empty-message');
                if (emptyMessage) {
                    emptyMessage.style.display = 'block';
                }
                
                // Ẩn feedback
                feedbackContainer.style.display = 'none';
                
                // Xóa border màu
                answerArea.classList.remove('border-success', 'border-danger');
            }
            
            // Hàm phát âm từ
            function speakWord(word) {
                if ('speechSynthesis' in window) {
                    const utterance = new SpeechSynthesisUtterance(word);
                    utterance.lang = 'en-US';
                    utterance.rate = 0.9; // Tốc độ nói chậm hơn một chút
                    window.speechSynthesis.speak(utterance);
                } else {
                    alert("Trình duyệt của bạn không hỗ trợ chức năng đọc văn bản");
                }
            }
            
            // Thêm CSS tùy chỉnh
            const style = document.createElement('style');
            style.textContent = `
                .min-height-60 {
                    min-height: 60px;
                }
                .word-item {
                    cursor: pointer;
                    transition: all 0.2s;
                }
                .word-item:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
                }
                .answer-area {
                    min-height: 80px;
                    transition: all 0.3s;
                }
                .border-success {
                    border-color: #28a745 !important;
                    background-color: rgba(40, 167, 69, 0.1);
                }
                .border-danger {
                    border-color: #dc3545 !important;
                    background-color: rgba(220, 53, 69, 0.1);
                }
            `;
            document.head.appendChild(style);
        });
    </script>
}