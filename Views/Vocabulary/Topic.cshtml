@using TiengAnh.Extensions
@using System.Security.Claims
@model List<VocabularyModel>
@{
    ViewData["Title"] = ViewBag.Topic?.Name_CD ?? "Chủ đề từ vựng";
    var topic = ViewBag.Topic as TopicModel;
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

<!-- Topic Header -->
<div class="container mt-5">
    <div class="row mb-4">
        <div class="col-md-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Vocabulary")">Từ vựng</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@(topic?.Name_CD ?? "Chủ đề")</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row align-items-center mb-5">
        <div class="col-md-8">
            <h1 class="display-5 fw-bold mb-3">Chủ đề: @(topic?.Name_CD ?? "Từ vựng")</h1>
            <p class="lead">@(topic?.Description_CD ?? "Danh sách từ vựng theo chủ đề.")</p>
            <div class="d-flex align-items-center mt-3">
                <span class="badge badge-primary me-2">@Model.Count từ vựng</span>
                <span class="badge badge-warning">Trình độ: A1 - A2</span>
            </div>
        </div>
        <div class="col-md-4 text-end">
            <img src="@(topic?.IconPath ?? "/images/icons/default.png")" alt="@(topic?.Name_CD ?? "Chủ đề")" class="topic-icon-large animate__animated animate__bounce" style="width: 120px; height: 120px;" />
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <h5 class="card-title mb-3">
                        <i class="fas fa-lightbulb text-warning me-2"></i>
                        Mẹo học từ vựng
                    </h5>
                    <p class="card-text">Hãy nhấn vào nút <i class="fas fa-volume-up text-primary"></i> để nghe phát âm chuẩn của từng từ vựng, sau đó lặp lại và ghi nhớ. Học 5-7 từ mỗi ngày sẽ hiệu quả hơn là cố gắng học tất cả cùng một lúc.</p>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <h5 class="card-title mb-3">
                        <i class="fas fa-gamepad text-success me-2"></i>
                        Trò chơi học từ vựng
                    </h5>
                    <p class="card-text">Sau khi học từ vựng, hãy thử sức với các bài tập và trò chơi để ghi nhớ lâu hơn!</p>
                    <div class="d-flex mt-3">
                        <a href="@Url.Action("Flashcard", "Vocabulary", new { id = topic?.ID_CD })" class="btn btn-sm btn-primary me-2">
                            <i class="fas fa-gamepad me-1"></i> Chơi Flashcards
                        </a>
                        <a href="@Url.Action("Exercise", "Vocabulary", new { id = topic?.ID_CD })" class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-tasks me-1"></i> Làm bài tập
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Vocabulary List -->
    <div class="row">
        <div class="col-md-12 mb-4">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="fw-bold">Danh sách từ vựng</h2>
                <div class="d-flex align-items-center">
                    <div class="dropdown me-2">
                        <button class="btn btn-outline-primary dropdown-toggle" type="button" id="levelFilterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-filter me-1"></i> Trình độ
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="levelFilterDropdown">
                            <li><a class="dropdown-item active" href="#">Tất cả</a></li>
                            <li><a class="dropdown-item" href="#">A1 - Sơ cấp</a></li>
                            <li><a class="dropdown-item" href="#">A2 - Tiền trung cấp</a></li>
                            <li><a class="dropdown-item" href="#">B1 - Trung cấp</a></li>
                            <li><a class="dropdown-item" href="#">B2 - Cao trung cấp</a></li>
                            <li><a class="dropdown-item" href="#">C1 - Nâng cao</a></li>
                            <li><a class="dropdown-item" href="#">C2 - Thành thạo</a></li>
                        </ul>
                    </div>
                    <div class="dropdown">
                        <button class="btn btn-outline-primary dropdown-toggle" type="button" id="typeFilterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-filter me-1"></i> Loại từ
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="typeFilterDropdown">
                            <li><a class="dropdown-item active" href="#">Tất cả</a></li>
                            <li><a class="dropdown-item" href="#">Danh từ (Noun)</a></li>
                            <li><a class="dropdown-item" href="#">Động từ (Verb)</a></li>
                            <li><a class="dropdown-item" href="#">Tính từ (Adjective)</a></li>
                            <li><a class="dropdown-item" href="#">Trạng từ (Adverb)</a></li>
                            <li><a class="dropdown-item" href="#">Giới từ (Preposition)</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4">
        @foreach (var vocab in Model)
        {
            <div class="col-lg-6 vocabulary-item" data-level="@vocab.Level_TV" data-type="@vocab.PartOfSpeech">
                <div class="card border-0 shadow-sm vocabulary-card h-100">
                    <div class="card-body p-0">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <div class="vocabulary-img-container">
                                    <img src="@vocab.Image_TV" alt="@vocab.Word_TV" class="img-fluid vocabulary-img"
                                        onerror="this.src='/images/vocabulary/default.jpg';this.onerror='';">
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="p-3">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <div>
                                            <h3 class="vocabulary-title word">@vocab.Word_TV</h3>
                                            <div class="d-flex align-items-center">
                                                <span class="badge bg-light text-dark me-2 part-of-speech">
                                                    @Html.DisplayPartOfSpeech(vocab.PartOfSpeech ?? "")
                                                </span>
                                                <span class="level-badge level-@vocab.Level_TV">@vocab.Level_TV</span>
                                            </div>
                                        </div>
                                        <button class="audio-btn" data-word="@vocab.Word_TV">
                                            <i class="fas fa-volume-up"></i>
                                        </button>
                                    </div>

                                    <p class="vocabulary-translation mb-2"><strong>Nghĩa:</strong> @vocab.Meaning_TV</p>
                                    <p class="example text-muted mb-3"><em>@vocab.Example_TV</em></p>
                                    
                                    <div class="d-flex justify-content-between">
                                        <a href="@Url.Action("Details", "Vocabulary", new { id = vocab.ID_TV })" class="btn btn-sm btn-outline-primary">
                                            Chi tiết <i class="fas fa-arrow-right ms-1"></i>
                                        </a>
                                        <button class="btn btn-sm @(vocab.IsFavorite ? "btn-danger" : "btn-outline-danger") favorite-btn" data-id="@vocab.ID_TV" title="@(vocab.IsFavorite ? "Đã thêm vào yêu thích" : "Thêm vào yêu thích")">
                                            <i class="@(vocab.IsFavorite ? "fas" : "far") fa-heart"></i> Yêu thích
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Practice Section -->
<section class="py-5 bg-light mt-5">
    <div class="container">
        <div class="text-center mb-5">
            <h2 class="display-5 fw-bold mb-3">Luyện tập từ vựng</h2>
            <p class="lead">Hãy làm một số bài tập đơn giản để ghi nhớ từ vựng tốt hơn</p>
        </div>

        <div class="card border-0 shadow-sm">
            <div class="card-body p-4">
                <h4 class="card-title mb-4">Mini Quiz</h4>
                
                <div class="quiz-question mb-4">
                    <p class="fw-bold mb-3">1. Đâu là nghĩa của từ "@Model.FirstOrDefault()?.Word_TV"?</p>
                    <div class="quiz-option" data-correct="true">
                        <span>A. @Model.FirstOrDefault()?.Meaning_TV</span>
                    </div>
                    <div class="quiz-option">
                        <span>B. Một loại đồ ăn</span>
                    </div>
                    <div class="quiz-option">
                        <span>C. Một loại xe</span>
                    </div>
                    <div class="quiz-option">
                        <span>D. Một loại cây</span>
                    </div>
                </div>

                @if (Model.Count >= 2)
                {
                    <div class="quiz-question">
                        <p class="fw-bold mb-3">2. Đâu là nghĩa của từ "@Model.Skip(1).FirstOrDefault()?.Word_TV"?</p>
                        <div class="quiz-option">
                            <span>A. Một loại đồ uống</span>
                        </div>
                        <div class="quiz-option" data-correct="true">
                            <span>B. @Model.Skip(1).FirstOrDefault()?.Meaning_TV</span>
                        </div>
                        <div class="quiz-option">
                            <span>C. Một loại thể thao</span>
                        </div>
                        <div class="quiz-option">
                            <span>D. Một loại hoa</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Xử lý khi click vào nút bộ lọc trình độ
            const levelFilterItems = document.querySelectorAll('#levelFilterDropdown + .dropdown-menu .dropdown-item');
            levelFilterItems.forEach(item => {
                item.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // Cập nhật trạng thái active
                    levelFilterItems.forEach(i => i.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Cập nhật text của button
                    document.getElementById('levelFilterDropdown').innerHTML = 
                        `<i class="fas fa-filter me-1"></i> ${this.textContent}`;
                    
                    // Lọc các từ vựng
                    filterVocabulary();
                });
            });
            
            // Xử lý khi click vào nút bộ lọc loại từ
            const typeFilterItems = document.querySelectorAll('#typeFilterDropdown + .dropdown-menu .dropdown-item');
            typeFilterItems.forEach(item => {
                item.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // Cập nhật trạng thái active
                    typeFilterItems.forEach(i => i.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Cập nhật text của button
                    document.getElementById('typeFilterDropdown').innerHTML = 
                        `<i class="fas fa-filter me-1"></i> ${this.textContent}`;
                    
                    // Lọc các từ vựng
                    filterVocabulary();
                });
            });
            
            // Xử lý khi click vào nút yêu thích
            const favoriteButtons = document.querySelectorAll('.favorite-btn');
            favoriteButtons.forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const wordId = this.getAttribute('data-id');
                    
                    // Lưu trạng thái hiện tại trước khi gọi API
                    const icon = this.querySelector('i');
                    const currentlyFavorited = icon.classList.contains('fas');
                    
                    // Gọi API để toggle trạng thái yêu thích
                    window.progressTracker.toggleFavorite(wordId, 'Vocabulary')
                        .then(data => {
                            if (data.success) {
                                if (!currentlyFavorited) {
                                    // Nếu chưa yêu thích, thêm vào yêu thích
                                    icon.classList.replace('far', 'fas');
                                    this.classList.replace('btn-outline-danger', 'btn-danger');
                                    this.setAttribute('title', 'Đã thêm vào yêu thích');
                                    showNotification('Đã thêm vào danh sách yêu thích', 'success');
                                    
                                    // Cập nhật trang yêu thích nếu đang mở
                                    updateFavoritesPage('add', wordId, 'Vocabulary');
                                } else {
                                    // Nếu đã yêu thích, bỏ yêu thích
                                    icon.classList.replace('fas', 'far');
                                    this.classList.replace('btn-danger', 'btn-outline-danger');
                                    this.setAttribute('title', 'Thêm vào yêu thích');
                                    showNotification('Đã xóa khỏi danh sách yêu thích', 'info');
                                    
                                    // Cập nhật trang yêu thích nếu đang mở
                                    updateFavoritesPage('remove', wordId, 'Vocabulary');
                                }
                            }
                        })
                        .catch(error => {
                            console.error('Lỗi khi cập nhật trạng thái yêu thích:', error);
                            showNotification('Có lỗi xảy ra. Vui lòng đăng nhập và thử lại', 'danger');
                        });
                });
            });
            
            // Hàm lọc từ vựng
            function filterVocabulary() {
                const selectedLevel = document.querySelector('#levelFilterDropdown + .dropdown-menu .dropdown-item.active').textContent;
                const selectedType = document.querySelector('#typeFilterDropdown + .dropdown-menu .dropdown-item.active').textContent;
                
                const vocabularyItems = document.querySelectorAll('.vocabulary-item');
                
                vocabularyItems.forEach(item => {
                    const level = item.getAttribute('data-level');
                    const type = item.getAttribute('data-type');
                    
                    const levelMatch = selectedLevel === 'Tất cả' || selectedLevel.startsWith(level);
                    const typeMatch = selectedType === 'Tất cả' || selectedType.includes(getPartOfSpeechName(type));
                    
                    if (levelMatch && typeMatch) {
                        item.style.display = 'block';
                    } else {
                        item.style.display = 'none';
                    }
                });
            }
            
            // Hiển thị thông báo
            function showNotification(message, type) {
                const notification = document.createElement('div');
                notification.className = `alert alert-${type} notification-toast`;
                notification.style.position = 'fixed';
                notification.style.top = '20px';
                notification.style.right = '20px';
                notification.style.zIndex = '9999';
                notification.style.minWidth = '300px';
                notification.style.padding = '15px';
                notification.style.boxShadow = '0 0.5rem 1rem rgba(0,0,0,0.15)';
                notification.innerHTML = message;
                
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    notification.remove();
                }, 3000);
            }
            
            // Trả về tên đầy đủ của loại từ
            function getPartOfSpeechName(code) {
                const types = {
                    'n': 'Noun',
                    'v': 'Verb',
                    'adj': 'Adjective',
                    'adv': 'Adverb',
                    'prep': 'Preposition',
                    'conj': 'Conjunction',
                    'pron': 'Pronoun',
                    'det': 'Determiner',
                    'interj': 'Interjection'
                };
                
                return types[code] || code;
            }
            
            // Hàm cập nhật trang yêu thích nếu đang mở
            function updateFavoritesPage(action, itemId, itemType) {
                // Kiểm tra xem có đang mở tab favorites không (nếu dùng iframe hoặc cửa sổ đa tab)
                const favoritesWindow = window.opener || window.parent;
                if (favoritesWindow && favoritesWindow !== window) {
                    try {
                        // Gửi thông điệp tới cửa sổ khác để cập nhật
                        favoritesWindow.postMessage({
                            action: action,
                            itemId: itemId,
                            itemType: itemType
                        }, '*');
                    } catch (e) {
                        console.error('Không thể cập nhật trang yêu thích:', e);
                    }
                }
            }
        });
    </script>
}

@functions {
    public string GetPartOfSpeechName(string code)
    {
        Dictionary<string, string> types = new Dictionary<string, string>
        {
            { "n", "Danh từ (Noun)" },
            { "v", "Động từ (Verb)" },
            { "adj", "Tính từ (Adjective)" },
            { "adv", "Trạng từ (Adverb)" },
            { "prep", "Giới từ (Preposition)" },
            { "conj", "Liên từ (Conjunction)" },
            { "pron", "Đại từ (Pronoun)" },
            { "det", "Hạn định từ (Determiner)" },
            { "interj", "Thán từ (Interjection)" }
        };
        
        return types.ContainsKey(code) ? types[code] : code;
    }
}
