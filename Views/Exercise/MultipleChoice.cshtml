@using TiengAnh.Extensions
@model ExerciseModel
@{
    ViewData["Title"] = "Trắc nghiệm - " + ViewBag.Topic?.Name_CD ?? "Chủ đề";
    var topic = ViewBag.Topic as TopicModel;
}

<!-- Header Section -->
<div class="container mt-5">
    <div class="row mb-4">
        <div class="col-md-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Exercise")">Bài tập</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Topic", "Exercise", new { id = topic?.ID_CD })">@(topic?.Name_CD ?? "Chủ đề")</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Trắc nghiệm</li>
                </ol>
            </nav>
        </div>
    </div>
    
    <!-- Title and Instructions -->
    <div class="row mb-5">
        <div class="col-md-8">
            <h1 class="display-5 fw-bold mb-3">Trắc nghiệm: @(topic?.Name_CD ?? "Chủ đề")</h1>
            <p class="lead">Chọn đáp án đúng cho câu hỏi bên dưới.</p>
            <div class="card bg-light mb-4">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-lightbulb text-warning me-2"></i>Hướng dẫn</h5>
                    <ul class="mb-0">
                        <li>Đọc kỹ câu hỏi và các lựa chọn</li>
                        <li>Mỗi câu hỏi chỉ có một đáp án đúng</li>
                        <li>Chọn đáp án bạn cho là đúng</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-md-4 text-end">
            <div class="progress-container bg-light p-3 rounded shadow-sm">
                <h5 class="mb-3">Tiến độ</h5>
                <div class="progress mb-2" style="height: 25px;">
                    <div class="progress-bar bg-success" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" id="progress-bar">
                        0%
                    </div>
                </div>
                <p class="text-center mb-0">
                    <span id="answered-count">0</span>/1 câu
                </p>
            </div>
        </div>
    </div>

    <!-- Quiz Questions -->
    <div class="row">
        <div class="col-lg-8">
            <form id="quiz-form">
                <div class="card border-0 shadow-sm mb-4 question-card" id="question-1" data-question-id="@Model.ID_BT">
                    <div class="card-body p-4">
                        <h4 class="fw-bold mb-4">Câu hỏi: @Model.Question_BT</h4>
                        
                        <div class="options-list">
                            <div class="quiz-option" data-answer="A" data-correct="@(Model.Option_A == Model.Answer_BT ? "true" : "false")">
                                <span>A. @Model.Option_A</span>
                            </div>
                            <div class="quiz-option" data-answer="B" data-correct="@(Model.Option_B == Model.Answer_BT ? "true" : "false")">
                                <span>B. @Model.Option_B</span>
                            </div>
                            <div class="quiz-option" data-answer="C" data-correct="@(Model.Option_C == Model.Answer_BT ? "true" : "false")">
                                <span>C. @Model.Option_C</span>
                            </div>
                            <div class="quiz-option" data-answer="D" data-correct="@(Model.Option_D == Model.Answer_BT ? "true" : "false")">
                                <span>D. @Model.Option_D</span>
                            </div>
                        </div>
                        
                        <!-- Debug info -->
                        <div class="debug-info mt-2" style="display: none;">
                            <p class="text-muted small">Debug: CorrectAnswer = "@Model.CorrectAnswer", Answer_BT = "@Model.Answer_BT"</p>
                        </div>
                        
                        <div class="explanation mt-4 p-3 rounded" style="display: none; background-color: #f8f9fa;">
                            <p class="mb-0">
                                <strong>Giải thích:</strong> @Model.Explanation_BT
                            </p>
                        </div>
                    </div>
                </div>
                
                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                    <button type="button" class="btn btn-primary" id="check-answers-btn">
                        <i class="fas fa-check me-1"></i> Kiểm tra
                    </button>
                    @if (Model.ID_BT > 1)
                    {
                        <button type="button" class="btn btn-outline-secondary" id="prev-exercise-btn">
                            <i class="fas fa-arrow-left me-1"></i> Bài trước
                        </button>
                    }
                    @if (Model.ID_BT < 36)
                    {
                        <button type="button" class="btn btn-outline-secondary" id="next-exercise-btn">
                            <i class="fas fa-arrow-right me-1"></i> Bài tiếp theo
                        </button>
                    }
                </div>
            </form>
        </div>
        
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm sticky-top" style="top: 20px;">
                <div class="card-body p-4">
                    <h5 class="card-title mb-3">Thông tin</h5>
                    
                    <p>Mã bài tập: <strong>#@Model.ID_BT</strong></p>
                    <p>Trình độ: <span class="badge level-badge level-@Model.Level">@Model.Level</span></p>
                    
                    <hr />
                    
                    <div class="d-grid gap-2">
                        <a href="@Url.Action("Topic", "Exercise", new { id = topic?.ID_CD })" class="btn btn-outline-primary">
                            <i class="fas fa-arrow-left me-1"></i> Về trang chủ đề
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Results Modal -->
    <div class="modal fade" id="resultsModal" tabindex="-1" aria-labelledby="resultsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="resultsModalLabel">Kết quả bài tập</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="text-center mb-4">
                        <div class="score-circle mb-3">
                            <span id="score-percentage">0%</span>
                        </div>
                        <h4><span id="score-correct">0</span>/1 câu đúng</h4>
                        <p id="score-message">Hãy cố gắng hơn!</p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" id="continue-btn">Tiếp tục</button>
                    <button type="button" class="btn btn-success" id="retry-btn">Làm lại</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .level-badge {
            padding: 0.25rem 0.5rem;
            border-radius: 20px;
            font-size: 0.75rem;
        }
        
        .level-A1, .level-A2 { background-color: #e9f5ff; color: #0d6efd; }
        .level-B1, .level-B2 { background-color: #e3f9e5; color: #198754; }
        .level-C1, .level-C2 { background-color: #ffe8e8; color: #dc3545; }
        
        .quiz-option {
            padding: 15px;
            border: 1px solid #e5e5e5;
            border-radius: 8px;
            margin-bottom: 10px;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .quiz-option:hover {
            background-color: #f8f9fa;
        }
        
        .quiz-option.selected {
            border-color: #0d6efd;
            background-color: rgba(13, 110, 253, 0.1);
        }
        
        .quiz-option.correct {
            border-color: #198754;
            background-color: rgba(25, 135, 84, 0.1);
        }
        
        .quiz-option.incorrect {
            border-color: #dc3545;
            background-color: rgba(220, 53, 69, 0.1);
        }
        
        .correct-indicator {
            margin-left: 5px;
            font-weight: bold;
        }
        
        .question-card {
            display: none;
        }
        
        .question-card:first-child {
            display: block;
        }
        
        .question-nav-btn.answered {
            background-color: #0d6efd;
            color: white;
        }
        
        .score-circle {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            background-color: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto;
            border: 6px solid #0d6efd;
        }
        
        .score-circle span {
            font-size: 2rem;
            font-weight: bold;
        }
        
        #back-to-top-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            display: none;
            z-index: 99;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Variables
            const quizForm = document.getElementById('quiz-form');
            const options = document.querySelectorAll('.quiz-option');
            const checkBtn = document.getElementById('check-answers-btn');
            const retryBtn = document.getElementById('retry-btn');
            const continueBtn = document.getElementById('continue-btn');
            const nextExerciseBtn = document.getElementById('next-exercise-btn');
            const progressBar = document.getElementById('progress-bar');
            const answeredCount = document.getElementById('answered-count');
            const explanations = document.querySelectorAll('.explanation');
            const resultsModal = new bootstrap.Modal(document.getElementById('resultsModal'));
            const prevExerciseBtn = document.getElementById('prev-exercise-btn');
            const debugInfo = document.querySelector('.debug-info');
            
            let selectedOption = null;
            let correct = false;
            let answered = false;
            let startTime = new Date();
            
            // Function to reset UI
            function resetUI() {
                options.forEach(opt => {
                    opt.classList.remove('selected', 'correct', 'incorrect');
                    const indicator = opt.querySelector('.correct-indicator');
                    if (indicator) {
                        indicator.remove();
                    }
                });
                explanations.forEach(exp => exp.style.display = 'none');
                selectedOption = null;
                answered = false;
                startTime = new Date();
                updateProgress();
            }
            
            // Toggle debug info
            if (prevExerciseBtn) {
                prevExerciseBtn.addEventListener('click', function() {
                    const currentId = @Model.ID_BT;
                    const prevId = currentId - 1;
                    window.location.href = `/Exercise/MultipleChoice/${prevId}`;
                });
            }
            
            // Event listeners for options
            options.forEach(option => {
                option.addEventListener('click', function() {
                    if (answered) return;
                    options.forEach(opt => opt.classList.remove('selected'));
                    this.classList.add('selected');
                    selectedOption = this;
                    updateProgress();
                });
            });
            
            // Check answers button
            checkBtn.addEventListener('click', function() {
                if (!selectedOption) {
                    alert('Vui lòng chọn một đáp án!');
                    return;
                }
                
                answered = true;
                const isCorrect = selectedOption.getAttribute('data-correct') === 'true';
                correct = isCorrect;
                
                let correctOption = null;
                options.forEach(opt => {
                    if (opt.getAttribute('data-correct') === 'true') {
                        correctOption = opt;
                    }
                });
                
                if (isCorrect) {
                    selectedOption.classList.add('correct');
                } else {
                    selectedOption.classList.add('incorrect');
                    if (correctOption) {
                        correctOption.classList.add('correct');
                        const indicator = document.createElement('span');
                        indicator.className = 'correct-indicator';
                        indicator.innerHTML = ' <i class="fas fa-check text-success"></i>';
                        correctOption.querySelector('span').appendChild(indicator);
                    }
                }
                
                explanations.forEach(exp => exp.style.display = 'block');
                
                const endTime = new Date();
                const timeSpentInSeconds = Math.round((endTime - startTime) / 1000);
                
                saveResults(correct ? 1 : 0, 1, timeSpentInSeconds);
                
                document.getElementById('score-percentage').textContent = correct ? '100%' : '0%';
                document.getElementById('score-correct').textContent = correct ? '1' : '0';
                document.getElementById('score-message').textContent = correct ? 'Tuyệt vời!' : 'Hãy cố gắng hơn!';
                resultsModal.show();
            });
            
            // Next exercise button
            if (nextExerciseBtn) {
                nextExerciseBtn.addEventListener('click', function() {
                    const currentId = @Model.ID_BT;
                    const nextId = currentId + 1;
                    window.location.href = `/Exercise/MultipleChoice/${nextId}`;
                });
            }
            
            // Retry button
            retryBtn.addEventListener('click', function() {
                resetUI();
                resultsModal.hide();
            });
            
            // Continue button
            continueBtn.addEventListener('click', function() {
                if (correct) {
                    const currentId = @Model.ID_BT;
                    if (currentId < 36) {
                        const nextId = currentId + 1;
                        window.location.href = `/Exercise/MultipleChoice/${nextId}`;
                    } else {
                        window.location.href = `@Url.Action("Topic", "Exercise", new { id = topic?.ID_CD })`;
                    }
                } else {
                    resetUI();
                }
            });
            
            // Handle modal close via X button
            document.getElementById('resultsModal').addEventListener('hidden.bs.modal', function() {
                resetUI();
            });
            
            // Back to top button
            window.addEventListener('scroll', function() {
                if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                    createBackToTopButton();
                }
            });
            
            // Functions
            function updateProgress() {
                const selectedCount = selectedOption ? 1 : 0;
                const percentage = Math.round((selectedCount / 1) * 100);
                
                progressBar.style.width = `${percentage}%`;
                progressBar.textContent = `${percentage}%`;
                progressBar.setAttribute('aria-valuenow', percentage);
                
                answeredCount.textContent = selectedCount;
            }
            
            function createBackToTopButton() {
                if (document.getElementById('back-to-top-btn')) return;
                
                const backToTopBtn = document.createElement('button');
                backToTopBtn.id = 'back-to-top-btn';
                backToTopBtn.className = 'btn btn-primary btn-lg';
                backToTopBtn.innerHTML = '<i class="fas fa-arrow-up me-2"></i> Lên đầu trang';
                backToTopBtn.addEventListener('click', function() {
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                });
                document.body.appendChild(backToTopBtn);
            }
            
            // Function to save results to localStorage
            function saveResults(correctCount, totalCount, timeInSeconds) {
                const topicId = @(topic?.ID_CD ?? 0);
                const exerciseType = 'multiple-choice';
                
                let exerciseResults = JSON.parse(localStorage.getItem('exerciseResults') || '{}');
                
                if (!exerciseResults[topicId]) {
                    exerciseResults[topicId] = {};
                }
                
                exerciseResults[topicId][exerciseType] = {
                    correctCount: correctCount,
                    totalCount: totalCount,
                    percentage: Math.round((correctCount / totalCount) * 100),
                    timeInSeconds: timeInSeconds,
                    date: new Date().toISOString()
                };
                
                localStorage.setItem('exerciseResults', JSON.stringify(exerciseResults));
            }
        });
    </script>
}