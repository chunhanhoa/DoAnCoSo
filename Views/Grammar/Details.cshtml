@using TiengAnh.Extensions
@using System.Security.Claims
@model GrammarModel
@{
    ViewData["Title"] = Model.Title_NP;
}

<!-- Grammar Lesson Header -->
<div class="container mt-5 mb-5">
    <!-- Thêm form token để bảo vệ AJAX request -->
    <form id="antiforgeryForm">
        @Html.AntiForgeryToken()
    </form>
    
    <div class="row mb-4">
        <div class="col-md-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb bg-light p-2 rounded">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Grammar")">Ngữ pháp</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Title_NP</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="display-5 fw-bold mb-3">@Model.Title_NP</h1>
            <div class="d-flex align-items-center mb-4">
                <span class="level-badge level-@Model.Level">@Model.Level</span>
                <button class="btn btn-sm @(Model.IsFavorite ? "btn-danger" : "btn-outline-danger") favorite-btn ms-2" data-id="@Model.ID_NP" title="@(Model.IsFavorite ? "Đã thêm vào yêu thích" : "Thêm vào yêu thích")">
                    <i class="@(Model.IsFavorite ? "fas" : "far") fa-heart"></i> Yêu thích
                </button>
            </div>
            <p class="lead">@(Model.Description_NP != null ? Model.Description_NP : "Không có mô tả")</p>
            <div class="d-flex align-items-center gap-2">
                <span class="badge badge-primary">@Model.TopicName</span>
                <span class="badge badge-warning">
                    <i class="far fa-calendar-alt me-1"></i> @Model.TimeUpload_NP.ToString("dd/MM/yyyy")
                </span>
            </div>
        </div>
        <div class="col-md-4 text-md-end">
            <!-- Removed translateToggle button -->
        </div>
    </div>

    <!-- Main Content -->
    <div class="row g-4">
        <!-- Left Column -->
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body p-4">
                    <!-- Concept Section -->
                    <h3 class="fw-bold mb-3 text-primary">Khái niệm</h3>
                    <div class="p-3 bg-light rounded content-block">
                        @Html.Raw(FormatContent(Model.Content))
                    </div>

                    <!-- Examples Section -->
                    <h3 class="fw-bold mb-3 mt-4 text-primary">Ví dụ</h3>
                    @foreach (var example in Model.Examples)
                    {
                        <div class="card bg-primary-soft mb-3 example-card">
                            <div class="card-body p-3">
                                <div class="d-flex align-items-center mb-2">
                                    <i class="fas fa-quote-left text-primary me-2"></i>
                                    <p class="mb-0 fw-bold content-text">@Html.Raw(FormatContent(example))</p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            
            <!-- Removed YouTube Video Section from left column -->
        </div>

        <!-- Right Column (Sidebar) -->
        <div class="col-lg-4">
            <!-- Important Notes -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body p-4">
                    <h4 class="fw-bold mb-3 text-primary">Lưu ý quan trọng</h4>
                    <ul class="list-group list-group-flush content-block">
                        <li class="list-group-item px-0 border-0">
                            <i class="fas fa-info-circle text-primary me-2"></i>
                            Thêm 's' hoặc 'es' vào động từ khi chủ ngữ là ngôi thứ ba số ít (he, she, it).
                        </li>
                        <li class="list-group-item px-0 border-0">
                            <i class="fas fa-info-circle text-primary me-2"></i>
                            Sử dụng <strong>does not (doesn't)</strong> cho phủ định với chủ ngữ ngôi thứ ba số ít.
                        </li>
                        <li class="list-group-item px-0 border-0">
                            <i class="fas fa-info-circle text-primary me-2"></i>
                            Sử dụng <strong>do not (don't)</strong> cho phủ định với các chủ ngữ khác.
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Related Exercises -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body p-4">
                    <h4 class="fw-bold mb-3 text-primary">Bài tập liên quan</h4>
                    <ul class="list-group list-group-flush content-block">
                        <li class="list-group-item px-0 border-0 d-flex justify-content-between align-items-center">
                            <a href="#" class="text-decoration-none text-dark">Bài tập Simple Present (Cơ bản)</a>
                            <span class="badge bg-primary rounded-pill">10 câu</span>
                        </li>
                        <li class="list-group-item px-0 border-0 d-flex justify-content-between align-items-center">
                            <a href="#" class="text-decoration-none text-dark">Bài tập Simple Present (Nâng cao)</a>
                            <span class="badge bg-primary rounded-pill">15 câu</span>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Video Tutorial (using VideoUrl_NP only) -->
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <h4 class="fw-bold mb-3 text-primary">Video hướng dẫn</h4>
                    <div class="ratio ratio-16x9 mb-3">
                        @{
                            // Use VideoUrl_NP if available, otherwise use a default URL
                            string videoUrl = !string.IsNullOrEmpty(Model.VideoUrl_NP) 
                                ? Model.VideoUrl_NP 
                                : "https://www.youtube.com/embed/nvVdIJ0las0";
                        }
                        <iframe src="@videoUrl" title="YouTube video" allowfullscreen></iframe>
                    </div>
                    <p class="small text-muted mb-0 content-text">Video này sẽ giúp bạn hiểu rõ hơn về @Model.Title_NP và cách sử dụng.</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* General layout */
        .container {
            max-width: 1200px;
        }

        .card {
            border-radius: 0.5rem;
            transition: all 0.3s ease;
        }

        .card:hover {
            box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15) !important;
        }

        h3.text-primary, h4.text-primary {
            border-bottom: 2px solid #4e73df;
            padding-bottom: 0.5rem;
        }

        /* Header */
        .level-badge {
            display: inline-block;
            padding: 0.35em 0.65em;
            font-size: 0.85rem;
            font-weight: 700;
            line-height: 1;
            text-align: center;
            white-space: nowrap;
            vertical-align: baseline;
            border-radius: 0.25rem;
            background-color: #28a745;
            color: white;
        }

        .lead {
            font-size: 1.1rem;
            line-height: 1.6;
            word-wrap: break-word;
        }

        .badge {
            font-size: 0.85rem;
            padding: 0.4em 0.8em;
        }

        .badge-primary {
            background-color: #4e73df;
            color: white;
        }

        .badge-warning {
            background-color: #f6c23e;
            color: #1f2a44;
        }

        .btn-outline-danger {
            font-size: 0.9rem;
            padding: 0.5rem 1rem;
        }

        /* Content blocks */
        .content-block {
            font-size: 1rem;
            line-height: 1.6;
            word-wrap: break-word;
        }

        .content-text {
            font-size: 1rem;
            line-height: 1.6;
            word-wrap: break-word;
            max-width: 100%;
        }

        .bg-light {
            background-color: #f8f9fa !important;
        }

        .bg-primary-soft {
            background-color: #e7f1ff !important;
        }

        ul.mb-0 li {
            margin-bottom: 0.5rem;
            font-size: 1rem;
            line-height: 1.6;
        }

        /* Examples */
        .example-card {
            transition: transform 0.3s ease;
        }

        .example-card:hover {
            transform: translateY(-3px);
        }

        /* Sidebar */
        .list-group-flush .list-group-item {
            padding: 0.5rem 0;
            font-size: 0.95rem;
            line-height: 1.6;
            transition: background-color 0.3s ease;
        }

        .list-group-flush .list-group-item:hover {
            background-color: #f1f3f5;
            border-radius: 0.25rem;
        }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            h1.display-5 {
                font-size: 2.5rem;
            }

            .col-md-12 {
                margin-bottom: 1rem;
            }

            .card-body {
                padding: 1rem;
            }

            .content-text, .content-block {
                font-size: 0.95rem;
            }
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Xử lý khi click vào nút yêu thích
            const favoriteBtn = document.querySelector('.favorite-btn');
            favoriteBtn.addEventListener('click', function() {
                const grammarId = this.getAttribute('data-id');
                
                // Thực hiện ajax call để cập nhật trạng thái yêu thích
                fetch('@Url.Action("ToggleFavorite", "Grammar")/' + grammarId, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    credentials: 'same-origin'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Cập nhật UI
                        const icon = this.querySelector('i');
                        if (data.isFavorite) {
                            icon.classList.replace('far', 'fas');
                            this.classList.replace('btn-outline-danger', 'btn-danger');
                            this.setAttribute('title', 'Đã thêm vào yêu thích');
                        } else {
                            icon.classList.replace('fas', 'far');
                            this.classList.replace('btn-danger', 'btn-outline-danger');
                            this.setAttribute('title', 'Thêm vào yêu thích');
                        }
                        
                        // Hiển thị thông báo
                        showNotification(data.message, data.isFavorite ? 'success' : 'info');
                    } else {
                        // Nếu chưa đăng nhập, chuyển hướng đến trang đăng nhập
                        if (data.message.includes('đăng nhập')) {
                            window.location.href = '@Url.Action("Login", "Account")';
                        } else {
                            showNotification(data.message, 'warning');
                        }
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Có lỗi xảy ra. Vui lòng thử lại sau.', 'danger');
                });
            });
            
            // Hiển thị thông báo
            function showNotification(message, type) {
                const notif = document.createElement('div');
                notif.className = `alert alert-${type} position-fixed`;
                notif.style.top = '20px';
                notif.style.right = '20px';
                notif.style.zIndex = '9999';
                notif.style.minWidth = '300px';
                notif.style.padding = '15px';
                notif.style.boxShadow = '0 0.5rem 1rem rgba(0,0,0,0.15)';
                notif.innerHTML = message;
                
                document.body.appendChild(notif);
                
                setTimeout(() => {
                    notif.style.opacity = '0';
                    notif.style.transition = 'opacity 0.5s';
                    setTimeout(() => {
                        document.body.removeChild(notif);
                    }, 500);
                }, 3000);
            }
        });
    </script>
}

@functions {
    public string FormatContent(string content)
    {
        if (string.IsNullOrEmpty(content))
            return "";
            
        // Xử lý ký tự đặc biệt
        content = System.Web.HttpUtility.HtmlEncode(content);
                
        // Xử lý xuống dòng
        content = content.Replace("\n", "<br>");
                
        // Xử lý định dạng đậm (**text**)
        content = System.Text.RegularExpressions.Regex.Replace(content, @"\*\*(.*?)\*\*", "<strong>$1</strong>");
                
        // Xử lý định dạng nghiêng (*text*)
        content = System.Text.RegularExpressions.Regex.Replace(content, @"\*(.*?)\*", "<em>$1</em>");
        
        return content;
    }
}