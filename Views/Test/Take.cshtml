@model TiengAnh.Models.KiemTra
@{
    ViewData["Title"] = "Bài kiểm tra: " + Model.TitleKt;
}

<link rel="stylesheet" href="~/css/test.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />

<div class="container mt-4">
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h2 class="mb-0">@Model.TitleKt</h2>
            <span class="badge bg-light text-primary" id="timerDisplay">00:00:00</span>
        </div>
        <div class="card-body">
            <p><strong>Chủ đề:</strong> @Model.IdCdNavigation.NameCd</p>
            <p><strong>Số câu hỏi:</strong> @Model.CauHoiKts.Count</p>
            <div class="progress test-progress mb-4">
                <div class="progress-bar test-progress-bar" id="progressBar" role="progressbar" style="width: 5%;" aria-valuenow="5" aria-valuemin="0" aria-valuemax="100">1/@Model.CauHoiKts.Count</div>
            </div>
        </div>
    </div>

    <form id="testForm" method="post" asp-action="SubmitTest">
        <input type="hidden" name="testId" value="@Model.IdKt" />

        @{
            int questionNumber = 1;
            foreach (var question in Model.CauHoiKts)
            {
                <div class="card mb-4 shadow-sm question-card" id="question-@questionNumber" data-question="@questionNumber" style="@(questionNumber > 1 ? "display: none;" : "")">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">Câu @questionNumber: @question.QuestionCh</h5>
                    </div>
                    <div class="card-body">
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="radio" name="answers_@(question.IdCh)" id="q@(question.IdCh)_A" value="A">
                            <label class="form-check-label" for="q@(question.IdCh)_A">A. @question.OptionA</label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="radio" name="answers_@(question.IdCh)" id="q@(question.IdCh)_B" value="B">
                            <label class="form-check-label" for="q@(question.IdCh)_B">B. @question.OptionB</label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="radio" name="answers_@(question.IdCh)" id="q@(question.IdCh)_C" value="C">
                            <label class="form-check-label" for="q@(question.IdCh)_C">C. @question.OptionC</label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="radio" name="answers_@(question.IdCh)" id="q@(question.IdCh)_D" value="D">
                            <label class="form-check-label" for="q@(question.IdCh)_D">D. @question.OptionD</label>
                        </div>
                    </div>
                </div>
                questionNumber++;
            }
        }

        <div class="d-flex justify-content-between mb-5">
            <button type="button" class="btn btn-outline-primary" id="prevBtn" disabled>
                <i class="bi bi-arrow-left"></i> Câu trước
            </button>
            <div>
                <span class="badge bg-primary p-2 me-2" id="progressText">Câu 1/@Model.CauHoiKts.Count</span>
                <button type="button" class="btn btn-primary" id="nextBtn">
                    Câu tiếp theo <i class="bi bi-arrow-right"></i>
                </button>
                <button type="button" class="btn btn-success" id="submitBtn" style="display: none;">
                    Nộp bài <i class="bi bi-check"></i>
                </button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Timer
            let seconds = 0;
            const timerDisplay = document.getElementById('timerDisplay');
            function updateTimer() {
                seconds++;
                const hrs = Math.floor(seconds / 3600);
                const mins = Math.floor((seconds % 3600) / 60);
                const secs = seconds % 60;
                timerDisplay.textContent =
                    (hrs < 10 ? '0' + hrs : hrs) + ':' +
                    (mins < 10 ? '0' + mins : mins) + ':' +
                    (secs < 10 ? '0' + secs : secs);
            }
            setInterval(updateTimer, 1000);

            // Navigation
            const totalQuestions = @(@Model.CauHoiKts.Count);
            let currentQuestion = 1;

            const updateProgress = () => {
                document.getElementById('progressText').textContent = 'Câu ' + currentQuestion + '/' + totalQuestions;
                const progress = (currentQuestion / totalQuestions) * 100;
                const progressBar = document.getElementById('progressBar');
                progressBar.style.width = progress + '%';
                progressBar.setAttribute('aria-valuenow', progress);
                progressBar.textContent = currentQuestion + '/' + totalQuestions;
            };

            document.getElementById('nextBtn').addEventListener('click', function () {
                if (currentQuestion < totalQuestions) {
                    document.getElementById('question-' + currentQuestion).style.display = 'none';
                    currentQuestion++;
                    document.getElementById('question-' + currentQuestion).style.display = '';
                    updateProgress();

                    document.getElementById('prevBtn').disabled = false;
                    if (currentQuestion === totalQuestions) {
                        this.style.display = 'none';
                        document.getElementById('submitBtn').style.display = '';
                    }
                }
            });

            document.getElementById('prevBtn').addEventListener('click', function () {
                if (currentQuestion > 1) {
                    document.getElementById('question-' + currentQuestion).style.display = 'none';
                    currentQuestion--;
                    document.getElementById('question-' + currentQuestion).style.display = '';
                    updateProgress();

                    this.disabled = currentQuestion === 1;
                    if (currentQuestion < totalQuestions) {
                        document.getElementById('submitBtn').style.display = 'none';
                        document.getElementById('nextBtn').style.display = '';
                    }
                }
            });

            // Submit check
            document.getElementById('submitBtn').addEventListener('click', function (e) {
                e.preventDefault();

                const unanswered = [...document.querySelectorAll('.question-card')].filter(card => {
                    const radios = card.querySelectorAll('input[type="radio"]');
                    return ![...radios].some(r => r.checked);
                });

                if (unanswered.length > 0) {
                    alert('Bạn còn ' + unanswered.length + ' câu chưa chọn đáp án!');
                    return;
                }

                if (confirm('Bạn có chắc chắn muốn nộp bài?')) {
                    document.getElementById('testForm').submit();
                }
            });
        });
    </script>
}
