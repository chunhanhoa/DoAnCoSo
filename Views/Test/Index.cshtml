@model IEnumerable<TestModel>
@{
    ViewData["Title"] = "Bài kiểm tra";
    var tests = Model ?? new List<TestModel>();
}

<!-- Hero Section -->
<section class="hero-section" style="padding: 3rem 0; background-color: #f8f9fa;">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-7">
                <h1 class="display-5 fw-bold mb-3">Kiểm tra trình độ tiếng Anh</h1>
                <p class="lead mb-4">
                    Đánh giá khả năng tiếng Anh của bạn thông qua các bài kiểm tra đa dạng. 
                    Từ kiểm tra từ vựng đến ngữ pháp, chúng tôi cung cấp nhiều bài kiểm tra phù hợp cho mọi trình độ.
                </p>
            </div>
            <div class="col-md-5 text-center text-md-end">
                <img src="/images/test/test-illustration.png" alt="Test Illustration" class="img-fluid" style="max-height: 250px; 
                     object-fit: contain;" onerror="this.src='/images/test/default.jpg'; this.onerror='';">
            </div>
        </div>
    </div>
</section>

<!-- Test Categories Section -->
<section class="py-5">
    <div class="container">
        <!-- Thông báo từ TempData -->
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
                <i class="fas fa-check-circle me-2"></i> @TempData["Message"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i> @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="row mb-4">
            <div class="col-md-8">
                <h2 class="fw-bold">Danh sách bài kiểm tra</h2>
                <p class="lead">Chọn bài kiểm tra phù hợp với trình độ của bạn</p>
            </div>
            <div class="col-md-4 text-md-end">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-primary filter-btn active" data-filter="all">
                        Tất cả
                    </button>
                    <button type="button" class="btn btn-outline-primary filter-btn" data-filter="Vocabulary">
                        Từ vựng
                    </button>
                    <button type="button" class="btn btn-outline-primary filter-btn" data-filter="Grammar">
                        Ngữ pháp
                    </button>
                </div>
            </div>
        </div>

        <!-- Add empty state with seed data button when no tests exist -->
        @if (!tests.Any())
        {
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body text-center p-5">
                    <img src="/images/empty-state.svg" alt="No tests found" class="mb-4" style="max-width: 150px;" 
                         onerror="this.src='/images/test/default.jpg';this.onerror='';">
                    <h3 class="mb-3">Chưa có bài kiểm tra nào</h3>
                    <p class="text-muted mb-4">Hiện tại chưa có bài kiểm tra nào trong hệ thống. Bạn có thể thêm dữ liệu mẫu để bắt đầu.</p>
                    <a href="@Url.Action("SeedTestData", "Test")" class="btn btn-primary">
                        <i class="fas fa-plus-circle me-2"></i> Thêm dữ liệu mẫu
                    </a>
                </div>
            </div>
        }
        else
        {
            <div class="row g-4 test-cards">
                @foreach (var test in tests)
                {
                    <div class="col-lg-6 test-card" data-category="@test.Category">
                        <div class="card h-100 border-0 shadow-sm hover-card">
                            <div class="card-body p-4">
                                <div class="row">
                                    <div class="col-md-4">
                                        <img src="@test.ImageUrl" alt="@test.TestName" class="img-fluid rounded" 
                                            onerror="this.src='/images/test/default.jpg';this.onerror='';">
                                    </div>
                                    <div class="col-md-8">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h3 class="card-title fw-bold">@test.TestName</h3>
                                            <span class="badge @GetLevelBadgeClass(test.Level)">@test.Level</span>
                                        </div>
                                        <p class="card-text mb-3">@test.Description</p>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <span class="badge bg-primary me-2">@test.TotalQuestions câu hỏi</span>
                                                <span class="badge bg-secondary">
                                                    <i class="far fa-clock me-1"></i> @test.Duration phút
                                                </span>
                                            </div>
                                            <a href="@Url.Action("Details", "Test", new { id = test.TestID })" class="btn btn-primary">
                                                Bắt đầu
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</section>

@section Scripts {
<script>
    $(document).ready(function() {
        // Log để kiểm tra dữ liệu
        console.log('Test page loaded');
        console.log('Total tests: ' + @tests.Count());
        
        // Filter tests by category
        $('.filter-btn').on('click', function() {
            const filter = $(this).data('filter');
            
            $('.filter-btn').removeClass('active');
            $(this).addClass('active');
            
            if (filter === 'all') {
                $('.test-card').fadeIn();
            } else {
                $('.test-card').hide();
                $(`.test-card[data-category="${filter}"]`).fadeIn();
            }
        });
        
        // Hover effect for test cards
        $('.hover-card').hover(function() {
            $(this).addClass('shadow');
            $(this).css('transform', 'translateY(-5px)');
        }, function() {
            $(this).removeClass('shadow');
            $(this).css('transform', 'translateY(0)');
        });
    });
</script>
}

@functions {
    public string GetLevelBadgeClass(string level)
    {
        return level switch
        {
            "A1" => "bg-success",
            "A2" => "bg-info",
            "B1" => "bg-warning",
            "B2" => "bg-danger",
            "C1" => "bg-primary",
            "C2" => "bg-dark",
            _ => "bg-secondary"
        };
    }
}
