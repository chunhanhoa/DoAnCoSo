@model UserModel
@{
    ViewData["Title"] = "Hồ sơ người dùng";
    bool isEditMode = ViewContext.HttpContext.Request.Query.ContainsKey("edit");
    string defaultAvatarPath = "/images/default-avatar.png";
    string userIdFromClaims = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
    // Use the GetAvatarUrl helper method
    string avatarUrl = Model?.GetAvatarUrl() ?? defaultAvatarPath;
}

<div class="container mt-5">
    <div class="row mb-4">
        <div class="col-md-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Hồ sơ của tôi</li>
                </ol>
            </nav>
        </div>
    </div>
    
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
            <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    <div class="row">
        <!-- Profile Sidebar -->
        <div class="col-lg-4 mb-4 mb-lg-0">
            <div class="card border-0 shadow-sm text-center">
                <div class="card-body p-4">
                    <div class="avatar-container position-relative mb-4">
                        <img id="avatar-preview" 
                             src="@avatarUrl" 
                             alt="@Model?.FullName" 
                             class="rounded-circle img-fluid avatar-image"
                             data-userid="@userIdFromClaims"
                             data-original-src="@(Model?.Avatar ?? defaultAvatarPath)"
                             style="width: 150px; height: 150px; object-fit: cover;"
                             onerror="handleAvatarError(this, '@(Model?.Avatar ?? defaultAvatarPath)', '@defaultAvatarPath')">
                        
                        @if (isEditMode)
                        {
                            <div class="image-upload">
                                <label for="avatar-upload" class="btn btn-sm btn-primary position-absolute bottom-0 end-0" style="border-radius: 50%; width: 40px; height: 40px;">
                                    <i class="fas fa-camera"></i>
                                </label>
                                <input id="avatar-upload" name="AvatarFile" type="file" style="display: none;" accept="image/*">
                            </div>
                        }
                        else
                        {
                            <button id="edit-avatar-btn" type="button" class="btn btn-sm btn-primary position-absolute bottom-0 end-0" style="border-radius: 50%; width: 40px; height: 40px;">
                                <i class="fas fa-camera"></i>
                            </button>
                        }
                    </div>
                    
                    <h4 class="fw-bold mb-0">@Model.FullName</h4>
                    <p class="text-muted mb-3">@Model.Username</p>
                    
                    <div class="d-flex justify-content-center mb-3">
                        <div class="badge badge-primary py-2 px-3 me-2">
                            <i class="fas fa-medal me-1"></i> Trình độ @Model.Level
                        </div>
                        <div class="badge badge-success py-2 px-3">
                            <i class="fas fa-star me-1"></i> @Model.Points điểm
                        </div>
                    </div>
                    
                    <div class="text-start mt-4">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item px-0 py-3 d-flex justify-content-between align-items-center border-top-0">
                                <span class="fw-bold"><i class="fas fa-user me-2 text-primary"></i> Thông tin cá nhân</span>
                                @if (!isEditMode)
                                {
                                    <a href="?edit=true" class="btn btn-sm btn-outline-primary px-3">
                                        <i class="fas fa-edit me-1"></i> Chỉnh sửa
                                    </a>
                                }
                            </li>
                            <li class="list-group-item px-0 py-3 d-flex justify-content-between align-items-center">
                                <span class="fw-bold"><i class="fas fa-lock me-2 text-primary"></i> Bảo mật</span>
                                <a href="@Url.Action("ChangePassword", "Account")" class="btn btn-sm btn-outline-primary px-3">
                                    <i class="fas fa-key me-1"></i> Đổi mật khẩu
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Profile Content -->
        <div class="col-lg-8">
            @if (isEditMode)
            {
                <!-- Edit Profile Form -->
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-body p-4">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h3 class="fw-bold mb-0">Chỉnh sửa thông tin cá nhân</h3>
                        </div>
                        
                        <form asp-action="UpdateProfile" method="post" asp-antiforgery="true">
                            <input type="hidden" asp-for="Id" />
                            <input type="hidden" asp-for="UserId" />
                            <input type="hidden" asp-for="Avatar" id="avatar-path" />
                            <input type="hidden" asp-for="Email" />
                            <input type="hidden" asp-for="Username" />
                            <input type="hidden" asp-for="UserName" />
                            <input type="hidden" asp-for="Level" />
                            <input type="hidden" asp-for="Points" />
                            <input type="hidden" asp-for="RegisterDate" />
                            <input type="hidden" asp-for="Role" />
                            <input type="hidden" asp-for="CreatedAt" />
                            <input type="hidden" asp-for="IsVerified" />
                            <input type="hidden" asp-for="PasswordHash" />

                            <div class="row mb-3">
                                <div class="col-md-6 mb-3 mb-md-0">
                                    <label class="form-label">Họ và tên</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-user"></i></span>
                                        <input type="text" class="form-control" asp-for="FullName" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Email</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                        <input type="email" class="form-control" asp-for="Email" readonly>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6 mb-3 mb-md-0">
                                    <label class="form-label">Số điện thoại</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                        <input type="tel" class="form-control" asp-for="Phone">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Ngày sinh</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-calendar"></i></span>
                                        @if (Model.DateOfBirth.HasValue)
                                        {
                                            <input type="date" class="form-control" asp-for="DateOfBirth" value="@Model.DateOfBirth.Value.ToString("yyyy-MM-dd")">
                                        }
                                        else
                                        {
                                            <input type="date" class="form-control" asp-for="DateOfBirth">
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6 mb-3 mb-md-0">
                                    <label class="form-label">Giới tính</label>
                                    <select class="form-select" asp-for="Gender">
                                        <option value="Nam">Nam</option>
                                        <option value="Nữ">Nữ</option>
                                        <option value="Khác">Khác</option>
                                    </select>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Tên người dùng</label>
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" asp-for="Username" placeholder="Tên người dùng">
                                        <label>Tên người dùng</label>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Địa chỉ</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                                    <input type="text" class="form-control" asp-for="Address">
                                </div>
                            </div>

                            <div class="mb-4">
                                <label class="form-label">Giới thiệu bản thân</label>
                                <textarea class="form-control" asp-for="Bio" rows="4" placeholder="Viết một vài điều về bản thân..."></textarea>
                            </div>

                            <div class="d-flex justify-content-end gap-2">
                                <a href="@Url.Action("Profile")" class="btn btn-outline-secondary px-4">
                                    <i class="fas fa-times me-1"></i> Hủy
                                </a>
                                <button type="submit" class="btn btn-primary px-4">
                                    <i class="fas fa-save me-1"></i> Lưu thay đổi
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <!-- User Info Card -->
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-body p-4">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h3 class="fw-bold mb-0">Thông tin cá nhân</h3>
                            <a href="?edit=true" class="btn btn-sm btn-outline-primary px-3">
                                <i class="fas fa-edit me-1"></i> Chỉnh sửa
                            </a>
                        </div>
                        
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="info-item">
                                    <label>Họ và tên</label>
                                    <p>@Model.FullName</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-item">
                                    <label>Email</label>
                                    <p>@Model.Email</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-item">
                                    <label>Số điện thoại</label>
                                    <p>@(string.IsNullOrEmpty(Model.Phone) ? "Chưa cập nhật" : Model.Phone)</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-item">
                                    <label>Ngày sinh</label>
                                    <p>@(Model.DateOfBirth.HasValue ? Model.DateOfBirth.Value.ToString("dd/MM/yyyy") : "Chưa cập nhật")</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-item">
                                    <label>Giới tính</label>
                                    <p>@(string.IsNullOrEmpty(Model.Gender) ? "Chưa cập nhật" : Model.Gender)</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-item">
                                    <label>Tên người dùng</label>
                                    <p>@Model.Username</p>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="info-item">
                                    <label>Địa chỉ</label>
                                    <p>@(string.IsNullOrEmpty(Model.Address) ? "Chưa cập nhật" : Model.Address)</p>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="info-item">
                                    <label>Giới thiệu bản thân</label>
                                    <p>@(string.IsNullOrEmpty(Model.Bio) ? "Chưa cập nhật" : Model.Bio)</p>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="info-item">
                                    <label>Thông tin tài khoản</label>
                                    <p>Đã tham gia @(Model.CreatedAt.Year < DateTime.Now.Year 
                                       ? $"{DateTime.Now.Year - Model.CreatedAt.Year} năm trước" 
                                       : "trong năm nay")</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Avatar Edit Modal -->
<div class="modal fade" id="avatarModal" tabindex="-1" aria-labelledby="avatarModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="avatarModalLabel">Cập nhật ảnh đại diện</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <div class="avatar-preview mb-3">
                    <img src="@avatarUrl" id="modal-avatar-preview" 
                         class="rounded-circle img-thumbnail avatar-image" 
                         style="width: 200px; height: 200px; object-fit: cover;" 
                         data-userid="@userIdFromClaims"
                         data-original-src="@(Model?.Avatar ?? defaultAvatarPath)"
                         onerror="handleAvatarError(this, '@(Model?.Avatar ?? defaultAvatarPath)', '@defaultAvatarPath')">
                </div>
                
                <div class="mb-3">
                    <label for="modal-avatar-upload" class="btn btn-outline-primary">
                        <i class="fas fa-upload me-2"></i> Chọn ảnh
                    </label>
                    <input id="modal-avatar-upload" type="file" accept="image/*" style="display: none;">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="save-avatar-btn">Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .progress-circle { margin: 0 auto; }
        .circular-chart { display: block; max-width: 100%; max-height: 100%; }
        .circle-bg { fill: none; stroke: #eee; stroke-width: 2; }
        .circle { fill: none; stroke-width: 2; stroke-linecap: round; animation: progress 1s ease-out forwards; }
        .progress-value { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); }
        @@keyframes progress { 0% { stroke-dasharray: 0 100; } }
        .avatar-error { border: 2px solid #ffcccb; opacity: 0.8; }
        .avatar-success { border: 2px solid #d4edda; }
        img.avatar-loading { position: relative; background-color: #f8f9fa; animation: pulse 1.5s infinite ease-in-out; }
        @@keyframes pulse { 0% { opacity: 0.6; } 50% { opacity: 1; } 100% { opacity: 0.6; } }
        .activity-timeline .activity-item:last-child { border-bottom: none !important; margin-bottom: 0 !important; padding-bottom: 0 !important; }
        .bg-primary-soft { background-color: rgba(78, 115, 250, 0.1); }
        .bg-success-soft { background-color: rgba(92, 184, 92, 0.1); }
        .bg-warning-soft { background-color: rgba(240, 173, 78, 0.1); }
        .bg-light-hover:hover { background-color: #f8f9fa !important; transition: all 0.3s ease; }
        .info-item { margin-bottom: 0.5rem; }
        .info-item label { display: block; color: #6c757d; font-size: 0.875rem; margin-bottom: 0.25rem; }
        .info-item p { font-weight: 500; margin-bottom: 0; }
        .image-upload { cursor: pointer; }
        .image-upload:hover .btn { opacity: 0.9; }
        .form-control:focus, .form-select:focus { border-color: #4e73fa; box-shadow: 0 0 0 0.25rem rgba(78, 115, 250, 0.25); }
    </style>
}

@section Scripts {
    <script>
        // Avatar upload preview trong form
        const avatarUpload = document.getElementById('avatar-upload');
        if (avatarUpload) {
            avatarUpload.addEventListener('change', function() {
                if (this.files && this.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        document.querySelector('#avatar-preview').src = e.target.result;
                        document.querySelector('#avatar-path').value = e.target.result;
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });
        }

        // Avatar edit button (non-edit mode)
        const editAvatarBtn = document.getElementById('edit-avatar-btn');
        if (editAvatarBtn) {
            editAvatarBtn.addEventListener('click', function() {
                const avatarModal = new bootstrap.Modal(document.getElementById('avatarModal'));
                avatarModal.show();
            });
        }

        // Modal avatar upload
        const modalAvatarUpload = document.getElementById('modal-avatar-upload');
        if (modalAvatarUpload) {
            modalAvatarUpload.addEventListener('change', function() {
                if (this.files && this.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        document.querySelector('#modal-avatar-preview').src = e.target.result;
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });
        }

        // Save avatar button in modal
        const saveAvatarBtn = document.getElementById('save-avatar-btn');
        if (saveAvatarBtn) {
            saveAvatarBtn.addEventListener('click', function() {
                const originalButtonText = this.innerHTML;
                this.disabled = true;
                this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang lưu...';

                const newAvatarSrc = document.querySelector('#modal-avatar-preview').src;
                const token = document.querySelector('form input[name="__RequestVerificationToken"]')?.value;

                fetch('@Url.Action("UpdateAvatar", "Account")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token || ''
                    },
                    body: JSON.stringify({ avatarData: newAvatarSrc })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification('Cập nhật ảnh đại diện thành công!', 'success');
                        bootstrap.Modal.getInstance(document.getElementById('avatarModal')).hide();
                        if (data.reload) {
                            setTimeout(() => window.location.reload(), 1000);
                        }
                    } else {
                        showNotification('Có lỗi xảy ra: ' + data.message, 'error');
                        this.disabled = false;
                        this.innerHTML = originalButtonText;
                    }
                })
                .catch(error => {
                    showNotification('Có lỗi xảy ra khi cập nhật ảnh đại diện: ' + error.message, 'error');
                    this.disabled = false;
                    this.innerHTML = originalButtonText;
                });
            });
        }

        // Auto-dismiss alerts
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            setTimeout(() => {
                const bsAlert = bootstrap.Alert.getOrCreateInstance(alert);
                if (bsAlert) bsAlert.close();
            }, 5000);
        });

        // Hiển thị thông báo
        function showNotification(message, type) {
            document.querySelectorAll('.notification-toast').forEach(n => n.remove());
            const notificationDiv = document.createElement('div');
            notificationDiv.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show notification-toast position-fixed`;
            notificationDiv.style.top = '20px';
            notificationDiv.style.right = '20px';
            notificationDiv.style.zIndex = '9999';
            notificationDiv.style.minWidth = '300px';
            notificationDiv.style.boxShadow = '0 0.5rem 1rem rgba(0,0,0,0.15)';
            notificationDiv.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i> ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            document.body.appendChild(notificationDiv);
            setTimeout(() => {
                try {
                    bootstrap.Alert.getOrCreateInstance(notificationDiv).close();
                } catch (e) {
                    notificationDiv.remove();
                }
            }, 5000);
        }

        // Thêm kiểm tra form trước khi submit
        const profileForm = document.querySelector('form[asp-action="UpdateProfile"]');
        if (profileForm) {
            profileForm.addEventListener('submit', function(e) {
                const requiredFields = profileForm.querySelectorAll('[required]');
                let isValid = true;
                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        isValid = false;
                        field.classList.add('is-invalid');
                    } else {
                        field.classList.remove('is-invalid');
                    }
                });
                if (!isValid) {
                    e.preventDefault();
                    showNotification('Vui lòng điền đầy đủ thông tin bắt buộc', 'error');
                }
            });
        }
    </script>
}