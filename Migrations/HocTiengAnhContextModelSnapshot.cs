// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TiengAnh.Data;

#nullable disable

namespace TiengAnh.Migrations
{
    [DbContext(typeof(HocTiengAnhContext))]
    partial class HocTiengAnhContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TiengAnh.Models.BaiTap", b =>
                {
                    b.Property<int>("IdBt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_BT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBt"));

                    b.Property<string>("AnswerBt")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("answer_BT")
                        .IsFixedLength();

                    b.Property<string>("ExplanationBt")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("explanation_BT");

                    b.Property<int>("IdCd")
                        .HasColumnType("int")
                        .HasColumnName("ID_CD");

                    b.Property<string>("OptionA")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("option_A");

                    b.Property<string>("OptionB")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("option_B");

                    b.Property<string>("OptionC")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("option_C");

                    b.Property<string>("OptionD")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("option_D");

                    b.Property<string>("QuestionBt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("question_BT");

                    b.HasKey("IdBt")
                        .HasName("PK__BaiTap__8B6207FCC79AE5AD");

                    b.HasIndex("IdCd");

                    b.ToTable("BaiTap", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.CauHoiKt", b =>
                {
                    b.Property<int>("IdCh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CH");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCh"));

                    b.Property<string>("AnswerCh")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("answer_CH")
                        .IsFixedLength();

                    b.Property<string>("ExplanationCh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("explanation_BT");

                    b.Property<int>("IdKt")
                        .HasColumnType("int")
                        .HasColumnName("ID_KT");

                    b.Property<string>("OptionA")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("option_A");

                    b.Property<string>("OptionB")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("option_B");

                    b.Property<string>("OptionC")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("option_C");

                    b.Property<string>("OptionD")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("option_D");

                    b.Property<string>("QuestionCh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("question_CH");

                    b.HasKey("IdCh")
                        .HasName("PK__CauHoiKT__8B622F83FEFF83EE");

                    b.HasIndex("IdKt");

                    b.ToTable("CauHoiKT", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.ChiTietKetQua", b =>
                {
                    b.Property<int>("IdCtkq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CTKQ");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCtkq"));

                    b.Property<int>("IdCh")
                        .HasColumnType("int")
                        .HasColumnName("ID_CH");

                    b.Property<int>("IdKq")
                        .HasColumnType("int")
                        .HasColumnName("ID_KQ");

                    b.Property<bool?>("IsCorrectCtkq")
                        .HasColumnType("bit")
                        .HasColumnName("is_correct_CTKQ");

                    b.Property<string>("UserAnswerCtkq")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("user_answer_CTKQ")
                        .IsFixedLength();

                    b.HasKey("IdCtkq")
                        .HasName("PK__ChiTietK__7FD0FD811FECDAC1");

                    b.HasIndex("IdCh");

                    b.HasIndex("IdKq");

                    b.ToTable("ChiTietKetQua", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.ChuDe", b =>
                {
                    b.Property<int>("IdCd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CD");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCd"));

                    b.Property<string>("DiscriptionCd")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("discription_CD");

                    b.Property<string>("NameCd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name_CD");

                    b.HasKey("IdCd")
                        .HasName("PK__ChuDe__8B622F8FACA9E0F4");

                    b.ToTable("ChuDe", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.KetQuaKiemTra", b =>
                {
                    b.Property<int>("IdKq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_KQ");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKq"));

                    b.Property<DateTime?>("FinishTimeKq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("finish_time_KQ")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdKt")
                        .HasColumnType("int")
                        .HasColumnName("ID_KT");

                    b.Property<int>("IdTk")
                        .HasColumnType("int")
                        .HasColumnName("ID_TK");

                    b.Property<int>("ScoreKq")
                        .HasColumnType("int")
                        .HasColumnName("score_KQ");

                    b.HasKey("IdKq")
                        .HasName("PK__KetQuaKi__8B62EC90AF9F117D");

                    b.HasIndex("IdKt");

                    b.HasIndex("IdTk");

                    b.ToTable("KetQuaKiemTra", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.KiemTra", b =>
                {
                    b.Property<int>("IdKt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_KT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKt"));

                    b.Property<int>("IdCd")
                        .HasColumnType("int")
                        .HasColumnName("ID_CD");

                    b.Property<string>("TitleKt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title_KT");

                    b.HasKey("IdKt")
                        .HasName("PK__KiemTra__8B62EC95CE5A62C1");

                    b.HasIndex("IdCd");

                    b.ToTable("KiemTra", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.LoaiTu", b =>
                {
                    b.Property<string>("IdLt")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("ID_LT");

                    b.Property<string>("ExampleLt")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("example_LT");

                    b.Property<string>("ExplainLt")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("explain_LT");

                    b.Property<string>("NameLt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name_LT");

                    b.HasKey("IdLt")
                        .HasName("PK__LoaiTu__8B62F4B414E49045");

                    b.ToTable("LoaiTu", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.NguPhap", b =>
                {
                    b.Property<int>("IdNp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_NP");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNp"));

                    b.Property<string>("ContentNp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content_NP");

                    b.Property<string>("DiscriptionNp")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("discription_NP");

                    b.Property<int>("IdCd")
                        .HasColumnType("int")
                        .HasColumnName("ID_CD");

                    b.Property<DateTime?>("TimeuploadNp")
                        .HasColumnType("datetime2")
                        .HasColumnName("timeupload_NP");

                    b.Property<string>("TitleNp")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title_NP");

                    b.HasKey("IdNp")
                        .HasName("PK__NguPhap__8B63E06953A29167");

                    b.HasIndex("IdCd");

                    b.ToTable("NguPhap", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.PhanQuyen", b =>
                {
                    b.Property<int>("IdQ")
                        .HasColumnType("int")
                        .HasColumnName("ID_Q");

                    b.Property<string>("NameQ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name_Q");

                    b.HasKey("IdQ")
                        .HasName("PK__PhanQuye__B87EA51BFB6360B8");

                    b.ToTable("PhanQuyen", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.TaiKhoan", b =>
                {
                    b.Property<int>("IdTk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TK");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTk"));

                    b.Property<string>("AvatarTk")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar_TK");

                    b.Property<string>("DisplaynameTk")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("displayname_TK");

                    b.Property<string>("EmailTk")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email_TK");

                    b.Property<int>("IdQ")
                        .HasColumnType("int")
                        .HasColumnName("ID_Q");

                    b.Property<string>("NameTk")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name_TK");

                    b.Property<string>("PasswordTk")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password_TK");

                    b.Property<string>("PhoneTk")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("phone_TK");

                    b.HasKey("IdTk")
                        .HasName("PK__TaiKhoan__8B63B1A9FB1D28E7");

                    b.HasIndex("IdQ");

                    b.ToTable("TaiKhoan", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.TienTrinhHoc", b =>
                {
                    b.Property<int>("IdTth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TTH");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTth"));

                    b.Property<int>("IdTk")
                        .HasColumnType("int")
                        .HasColumnName("ID_TK");

                    b.Property<int>("IdTypeTth")
                        .HasColumnType("int")
                        .HasColumnName("ID_type_TTH");

                    b.Property<DateTime?>("LastTimeStudyTth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("last_time_study_TTH")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("StatusTth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_TTH");

                    b.Property<string>("TypeTth")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("type_TTH");

                    b.HasKey("IdTth")
                        .HasName("PK__TienTrin__27BF88B2A1013737");

                    b.HasIndex("IdTk");

                    b.ToTable("TienTrinhHoc", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.TuVung", b =>
                {
                    b.Property<int>("IdTv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TV");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTv"));

                    b.Property<string>("AudioTv")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("audio_TV");

                    b.Property<string>("ExampleTv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("example_TV");

                    b.Property<int>("IdCd")
                        .HasColumnType("int")
                        .HasColumnName("ID_CD");

                    b.Property<string>("IdLt")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("ID_LT");

                    b.Property<string>("ImageTv")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image_TV");

                    b.Property<string>("LevelTv")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("level_TV");

                    b.Property<string>("MeaningTv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("meaning_TV");

                    b.Property<string>("WordTv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("word_TV");

                    b.HasKey("IdTv")
                        .HasName("PK__TuVung__8B63B1A4CFCF9C84");

                    b.HasIndex("IdCd");

                    b.HasIndex("IdLt");

                    b.ToTable("TuVung", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.YeuThich", b =>
                {
                    b.Property<int>("IdYt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_YT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdYt"));

                    b.Property<DateTime?>("DateCheckYt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_check_YT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdTk")
                        .HasColumnType("int")
                        .HasColumnName("ID_TK");

                    b.Property<int>("IdTypeYt")
                        .HasColumnType("int")
                        .HasColumnName("ID_type_YT");

                    b.Property<string>("TypeYt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("type_YT");

                    b.HasKey("IdYt")
                        .HasName("PK__YeuThich__8B627ECBAC60AF7D");

                    b.HasIndex("IdTk");

                    b.ToTable("YeuThich", (string)null);
                });

            modelBuilder.Entity("TiengAnh.Models.BaiTap", b =>
                {
                    b.HasOne("TiengAnh.Models.ChuDe", "IdCdNavigation")
                        .WithMany("BaiTaps")
                        .HasForeignKey("IdCd")
                        .IsRequired()
                        .HasConstraintName("FK_Exercises_ChuDe");

                    b.Navigation("IdCdNavigation");
                });

            modelBuilder.Entity("TiengAnh.Models.CauHoiKt", b =>
                {
                    b.HasOne("TiengAnh.Models.KiemTra", "IdKtNavigation")
                        .WithMany("CauHoiKts")
                        .HasForeignKey("IdKt")
                        .IsRequired()
                        .HasConstraintName("FK_TestQuestions_Test");

                    b.Navigation("IdKtNavigation");
                });

            modelBuilder.Entity("TiengAnh.Models.ChiTietKetQua", b =>
                {
                    b.HasOne("TiengAnh.Models.CauHoiKt", "IdChNavigation")
                        .WithMany("ChiTietKetQuas")
                        .HasForeignKey("IdCh")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietKetQua_CauHoi");

                    b.HasOne("TiengAnh.Models.KetQuaKiemTra", "IdKqNavigation")
                        .WithMany("ChiTietKetQuas")
                        .HasForeignKey("IdKq")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietKetQua_KetQua");

                    b.Navigation("IdChNavigation");

                    b.Navigation("IdKqNavigation");
                });

            modelBuilder.Entity("TiengAnh.Models.KetQuaKiemTra", b =>
                {
                    b.HasOne("TiengAnh.Models.KiemTra", "IdKtNavigation")
                        .WithMany("KetQuaKiemTras")
                        .HasForeignKey("IdKt")
                        .IsRequired()
                        .HasConstraintName("FK_KetQuaKiemTra_KiemTra");

                    b.HasOne("TiengAnh.Models.TaiKhoan", "IdTkNavigation")
                        .WithMany("KetQuaKiemTras")
                        .HasForeignKey("IdTk")
                        .IsRequired()
                        .HasConstraintName("FK_KetQuaKiemTra_TaiKhoan");

                    b.Navigation("IdKtNavigation");

                    b.Navigation("IdTkNavigation");
                });

            modelBuilder.Entity("TiengAnh.Models.KiemTra", b =>
                {
                    b.HasOne("TiengAnh.Models.ChuDe", "IdCdNavigation")
                        .WithMany("KiemTras")
                        .HasForeignKey("IdCd")
                        .IsRequired()
                        .HasConstraintName("FK_KiemTra_ChuDe");

                    b.Navigation("IdCdNavigation");
                });

            modelBuilder.Entity("TiengAnh.Models.NguPhap", b =>
                {
                    b.HasOne("TiengAnh.Models.ChuDe", "IdCdNavigation")
                        .WithMany("NguPhaps")
                        .HasForeignKey("IdCd")
                        .IsRequired()
                        .HasConstraintName("FK_Grammar_ChuDe");

                    b.Navigation("IdCdNavigation");
                });

            modelBuilder.Entity("TiengAnh.Models.TaiKhoan", b =>
                {
                    b.HasOne("TiengAnh.Models.PhanQuyen", "IdQNavigation")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("IdQ")
                        .IsRequired()
                        .HasConstraintName("FK_TaiKhoan_PhanQuyen");

                    b.Navigation("IdQNavigation");
                });

            modelBuilder.Entity("TiengAnh.Models.TienTrinhHoc", b =>
                {
                    b.HasOne("TiengAnh.Models.TaiKhoan", "IdTkNavigation")
                        .WithMany("TienTrinhHocs")
                        .HasForeignKey("IdTk")
                        .IsRequired()
                        .HasConstraintName("FK_TienTrinhHoc_TaiKhoan");

                    b.Navigation("IdTkNavigation");
                });

            modelBuilder.Entity("TiengAnh.Models.TuVung", b =>
                {
                    b.HasOne("TiengAnh.Models.ChuDe", "IdCdNavigation")
                        .WithMany("TuVungs")
                        .HasForeignKey("IdCd")
                        .IsRequired()
                        .HasConstraintName("FK_TuVung_ChuDe");

                    b.HasOne("TiengAnh.Models.LoaiTu", "IdLtNavigation")
                        .WithMany("TuVungs")
                        .HasForeignKey("IdLt")
                        .IsRequired()
                        .HasConstraintName("FK_TuVung_LoaiTu");

                    b.Navigation("IdCdNavigation");

                    b.Navigation("IdLtNavigation");
                });

            modelBuilder.Entity("TiengAnh.Models.YeuThich", b =>
                {
                    b.HasOne("TiengAnh.Models.TaiKhoan", "IdTkNavigation")
                        .WithMany("YeuThiches")
                        .HasForeignKey("IdTk")
                        .IsRequired()
                        .HasConstraintName("FK_MucYeuThich_TaiKhoan");

                    b.Navigation("IdTkNavigation");
                });

            modelBuilder.Entity("TiengAnh.Models.CauHoiKt", b =>
                {
                    b.Navigation("ChiTietKetQuas");
                });

            modelBuilder.Entity("TiengAnh.Models.ChuDe", b =>
                {
                    b.Navigation("BaiTaps");

                    b.Navigation("KiemTras");

                    b.Navigation("NguPhaps");

                    b.Navigation("TuVungs");
                });

            modelBuilder.Entity("TiengAnh.Models.KetQuaKiemTra", b =>
                {
                    b.Navigation("ChiTietKetQuas");
                });

            modelBuilder.Entity("TiengAnh.Models.KiemTra", b =>
                {
                    b.Navigation("CauHoiKts");

                    b.Navigation("KetQuaKiemTras");
                });

            modelBuilder.Entity("TiengAnh.Models.LoaiTu", b =>
                {
                    b.Navigation("TuVungs");
                });

            modelBuilder.Entity("TiengAnh.Models.PhanQuyen", b =>
                {
                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("TiengAnh.Models.TaiKhoan", b =>
                {
                    b.Navigation("KetQuaKiemTras");

                    b.Navigation("TienTrinhHocs");

                    b.Navigation("YeuThiches");
                });
#pragma warning restore 612, 618
        }
    }
}
